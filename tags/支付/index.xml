<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>支付 on 超级浩码</title>
    <link>https://vastzh.com/tags/%E6%94%AF%E4%BB%98/</link>
    <description>Recent content in 支付 on 超级浩码</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>© 2024 超级浩码</copyright>
    <lastBuildDate>Fri, 26 Jan 2024 10:38:15 +0800</lastBuildDate><atom:link href="https://vastzh.com/tags/%E6%94%AF%E4%BB%98/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>开发日记 —— 苹果支付指南</title>
      <link>https://vastzh.com/blog/apple_pay/</link>
      <pubDate>Fri, 26 Jan 2024 10:38:15 +0800</pubDate>
      
      <guid>https://vastzh.com/blog/apple_pay/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;上一篇文章分享了实践 Apple 登录的开发过程。 今天主要分享一下 Apple 支付的实践。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div id=&#34;前言&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;前言 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e5%89%8d%e8%a8%80&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;本次实践中，笔者采用了 &lt;strong&gt;订阅 + 一次性付费&lt;/strong&gt; 的模式。用户可根据自己的需求，选择会员订阅周期。从大部分开发者角度来说，订阅模式是比较常见的，因为订阅更有力于APP的长期发展。&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/apple_pay/p1.png&#34;
        alt=&#34;Alt text&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;div id=&#34;购买项配置&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;购买项配置 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e8%b4%ad%e4%b9%b0%e9%a1%b9%e9%85%8d%e7%bd%ae&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;进入 开发者后台配置&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在 &lt;strong&gt;App 内购买项目&lt;/strong&gt; 中创建 &lt;strong&gt;永久会员&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 &lt;strong&gt;订阅&lt;/strong&gt; 创建订阅组，后分别 &lt;strong&gt;月度会员&lt;/strong&gt; &lt;strong&gt;年度会员&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/apple_pay/p2.png&#34;
        alt=&#34;Alt text&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;需要注意两点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建的购买项需要设置多语言，否则会出现报错 &lt;strong&gt;缺少元数据&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;审核信息的截图有设备&lt;strong&gt;尺寸限制&lt;/strong&gt;，可参考官方文档：&lt;code&gt;https://developer.apple.com/help/app-store-connect/reference/screenshot-specifications&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;客户端&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;客户端 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e5%ae%a2%e6%88%b7%e7%ab%af&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;我使用 &lt;strong&gt;in_app_purchase&lt;/strong&gt; 插件，在客户端进行支付。可以运行插件的example进行测试。成功运行效果如下：





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/apple_pay/p3.gif&#34;
        alt=&#34;Alt text&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;具体细节可以参考插件文档，需要注意的是，我们需要如何进行iOS订单的验证。
通过插件的demo我们看到默认返回true，所以这部分逻辑需要开发者自己实现。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  Future&amp;lt;bool&amp;gt; _verifyPurchase(PurchaseDetails purchaseDetails) async {
    // IMPORTANT!! Always verify a purchase before delivering the product.
    // For the purpose of an example, we directly return true.
    
    return Future&amp;lt;bool&amp;gt;.value(true);
  }
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;通过方法返回的类型可以得到：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;class PurchaseVerificationData {
  /// ...

  /// The data used for local verification.
  ///
  /// The data is formatted according to the specifications of the respective
  /// store. You can use the [source] field to determine the store from which
  /// the data originated and proces the data accordingly.
  final String localVerificationData;

  /// The data used for server verification.
  final String serverVerificationData;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我们看到 &lt;strong&gt;localVerificationData&lt;/strong&gt; 用于本地验证，&lt;strong&gt;serverVerificationData&lt;/strong&gt; 用于服务器验证。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
    final verificationData =
        purchaseDetails.verificationData.serverVerificationData;

    final Dio dio = Dio();
    dio.options.headers[&amp;#39;Accept&amp;#39;] = &amp;#39;application/json&amp;#39;;
    dio.options.headers[&amp;#39;Content-Type&amp;#39;] = &amp;#39;application/json&amp;#39;;
    var response = await dio.post(&amp;#39;https://buy.itunes.apple.com/verifyReceipt&amp;#39;,
        data: {
          &amp;#39;password&amp;#39;: password,
          &amp;#39;receipt-data&amp;#39;: verificationData
        });
    var _response = json.decode(response.toString());
    if (_response[&amp;#34;status&amp;#34;] == 21007) {
      var response = await dio
          .post(&amp;#39;https://sandbox.itunes.apple.com/verifyReceipt&amp;#39;, data: {
        &amp;#39;password&amp;#39;: password,
        &amp;#39;receipt-data&amp;#39;: verificationData
      });
    }
    if (_response[&amp;#34;status&amp;#34;] == 0) {
      return Future&amp;lt;bool&amp;gt;.value(true);
    } else {
      return Future&amp;lt;bool&amp;gt;.value(false);
    }
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;以前苹果提供了一个验证接口，可以跳过服务端进行验证，可惜在去年5月份被标记 &lt;code&gt;Deprecated(已弃用)&lt;/code&gt;，虽然目前看来还是可以使用，但是保不齐哪天就被苹果给删掉了。&lt;/strong&gt;





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/apple_pay/p4.png&#34;
        alt=&#34;Alt text&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;通过文档我们得知：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;该接口已弃用。要验证服务器上的收据，请按照在服务器上的设备上验证收据中的步骤操作。要在不使用收据的情况下验证服务器上的应用内购买，请调用App Store Server API为您的客户获取 Apple 签名的交易和订阅信息，或验证您的应用获取的签名数据。您还可以从App Store Server Notifications V2端点获取相同的签名交易和订阅信息 。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所以需要改用 &lt;strong&gt;App Store Server API&lt;/strong&gt; 进行验证。&lt;/p&gt;
&lt;div id=&#34;获取交易信息&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;获取交易信息 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e8%8e%b7%e5%8f%96%e4%ba%a4%e6%98%93%e4%bf%a1%e6%81%af&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;https://developer.apple.com/documentation/appstoreserverapi/get_transaction_info&lt;/code&gt;
根据文档的描述，我们得知此接口我们可以获取 &lt;strong&gt;包含签名的单个交易信息的结果&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;接着，通过苹果开发后台进行配置下载 &lt;strong&gt;私钥匙文件 + KeyID + BundleID + Issuer&lt;/strong&gt; 进行验签比对订单号等数据判断交易是否成功。&lt;/p&gt;
&lt;div id=&#34;获取历史交易信息&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;获取历史交易信息 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e8%8e%b7%e5%8f%96%e5%8e%86%e5%8f%b2%e4%ba%a4%e6%98%93%e4%bf%a1%e6%81%af&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;https://developer.apple.com/documentation/appstoreserverapi/get_transaction_history&lt;/code&gt;
根据此接口我们可以获取&lt;strong&gt;包含签名的多个交易信息的结果&lt;/strong&gt;，同样验签后获取详细数据。&lt;/p&gt;
&lt;p&gt;我们可以通过此接口进行订阅到期续费情况等数据进行判断。&lt;/p&gt;
&lt;div id=&#34;验签及api配置&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;验签及API配置 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e9%aa%8c%e7%ad%be%e5%8f%8aapi%e9%85%8d%e7%bd%ae&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;在此页面我们可以获取验签需要的数据 &lt;strong&gt;私钥匙文件、 KeyID + BundleID + Issuer&lt;/strong&gt;





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/apple_pay/p5.png&#34;
        alt=&#34;Alt text&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;创建沙盒账号后可进行购买订阅的测试，不会收取费用。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/apple_pay/p6.png&#34;
        alt=&#34;Alt text&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;div id=&#34;内购被拒&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;内购被拒 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e5%86%85%e8%b4%ad%e8%a2%ab%e6%8b%92&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;另外，在完成所有工作发布可能会被拒，因为我之前没有订阅经验，所以遇到了一些问题。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/apple_pay/p7.png&#34;
        alt=&#34;Alt text&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;如果做了订阅我建议你完成以下步骤，如果这些步骤都做到了，那么大概率是不会被拒的。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在付费页面提供隐私政策及使用条款的入口。&lt;/li&gt;
&lt;li&gt;在使用条款中明确说明和介绍你的订阅服务，包含的服务内容、订阅周期、退订、取消订阅等信息。&lt;/li&gt;
&lt;li&gt;在APP详情页中，提供订阅服务的详细说明。&lt;/li&gt;
&lt;li&gt;提供恢复购买的功能。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果还是不知道如何做，可以参考一些其他的APP，一般在他们的App详情页和使用条款中都有订阅相关的说明。&lt;/p&gt;
&lt;div id=&#34;总结&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;总结 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e6%80%bb%e7%bb%93&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;理论上来说，&lt;strong&gt;获取交易信息&lt;/strong&gt; &lt;strong&gt;获取历史交易信息&lt;/strong&gt; 这两个接口的数据都可以放在客户端本地调用，只是验证这一步放在服务端去做比较符合逻辑。&lt;/p&gt;
&lt;p&gt;无论是全部交易接口在服务端还是验签在服务端，都可能被&lt;strong&gt;劫持&lt;/strong&gt;，即在返回客户端前，对数据进行加工处理，比如修改交易状态来欺瞒客户端。&lt;/p&gt;
&lt;p&gt;所以，最好是对接口数据进行加密。我采用对请求参数返回结构进行 &lt;strong&gt;AES&lt;/strong&gt; 加密，及时数据被劫持也无法进行修改。&lt;/p&gt;
&lt;p&gt;如果没有服务端，极端的方式是把验签放在客户端进行能跑通，因安全性问题不推荐这么做。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/img/wc-search.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
</description>
      
    </item>
    
  </channel>
</rss>
