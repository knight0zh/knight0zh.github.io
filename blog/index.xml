<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on 超级浩码</title>
    <link>https://vastzh.com/blog/</link>
    <description>Recent content in Blog on 超级浩码</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>© 2024 超级浩码</copyright>
    <lastBuildDate>Mon, 29 Jan 2024 09:38:15 +0800</lastBuildDate><atom:link href="https://vastzh.com/blog/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>开发日记 —— 记录对接苹果微信登录的坑</title>
      <link>https://vastzh.com/blog/wechat_login/</link>
      <pubDate>Mon, 29 Jan 2024 09:38:15 +0800</pubDate>
      
      <guid>https://vastzh.com/blog/wechat_login/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;在对接iOS微信登录时，踩了不少坑，查了很多网上的资料但是对&lt;strong&gt;Universal Links&lt;/strong&gt;和&lt;strong&gt;Associated Domains&lt;/strong&gt;的配置都比较模糊，本文详细介绍怎么配置这些参数。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div id=&#34;配置开放平台&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;配置开放平台 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e9%85%8d%e7%bd%ae%e5%bc%80%e6%94%be%e5%b9%b3%e5%8f%b0&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;如果你的应用需要使接入微信生态相关功能，如&lt;strong&gt;微信登录、微信支付、微信分享&lt;/strong&gt;等，那就需要先在微信开放平台注册账号。&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/wechat_login/image.png&#34;
        alt=&#34;Alt text&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;完成做&lt;strong&gt;开发者资质认证&lt;/strong&gt;，认证通过后，就可以进行&lt;strong&gt;应用接入&lt;/strong&gt;。需要注意认证的费用为300元，提交后会有微信交托的三方认证公司给你来电确认信息，所以看到陌生电话不要直接拒接。&lt;/p&gt;
&lt;p&gt;完成上述认证后进入正题开始接入&lt;strong&gt;微信登录&lt;/strong&gt;。在开放平台管理中心&lt;code&gt;创建移动应用&lt;/code&gt;(开发者资质可以创建50个)，填写应用名称、包名等基本信息。点击&lt;code&gt;下一步&lt;/code&gt;





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/wechat_login/image-1.png&#34;
        alt=&#34;Alt text&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;这里需要注意&lt;strong&gt;Universal Links&lt;/strong&gt;的填写。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;Universal Links&lt;/strong&gt; 是苹果在 WWDC 上提出的 iOS9 的新特性之一。此特性类似于深层链接，并能够方便地通过打开一个 Https 链接来直接启动您的客户端应用(手机有安装 App)。对比起以往所使用的 URL Scheme,这种新特性在实现 web-app 的无缝链接时能够提供极佳的用户体验。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;简单说这个链接就是用来打开你应用的入口，在微信中点击这个链接，就会直接跳转到你的应用。&lt;/p&gt;
&lt;p&gt;配置成功后可以尝试在手机Safari浏览器直接访问该地址会显示&lt;strong&gt;打开&lt;/strong&gt;按钮。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/wechat_login/image-2.png&#34;
        alt=&#34;Alt text&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;hr&gt;
&lt;div id=&#34;配置xcode&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;配置Xcode 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e9%85%8d%e7%bd%aexcode&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;此外我们还需要在Xcode中配置&lt;strong&gt;Associated Domains&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;点击&lt;code&gt;Sigining &amp;amp; Capabilities&lt;/code&gt; -&amp;gt; &lt;code&gt;Associated Domains&lt;/code&gt; -&amp;gt; &lt;code&gt;+&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;接着在下方&lt;strong&gt;Domais&lt;/strong&gt;中填写&lt;code&gt;applinks:xxx.com&lt;/code&gt;，其中xxx.com是你的域名。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/wechat_login/image-4.png&#34;
        alt=&#34;Alt text&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  


这里的域名需要和Universal Links中的域名一致，例如：&lt;/p&gt;
&lt;p&gt;开放平台设置&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Universal Links&lt;/strong&gt;: &lt;code&gt;https://xxx.com/st/universal_link/wechat/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;Xcode&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Domais&lt;/strong&gt;: &lt;code&gt;applinks:xxx.com&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;配置文件下载地址
&lt;code&gt;https://xxx.com/.well-known/apple-app-site-association&lt;/code&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;.well-known 目录是一个由互联网工程任务组（IETF）在RFC 5785中定义的特殊目录，用于存放网站的一些特定的元数据或者配置文件。这个目录通常放在网站的根目录下，使得这些配置文件可以通过一个标准和一致的方式被访问。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;APP会在第一次启动的时候通过填写的域名来下载apple-app-site-association文件。
所以我们还需要在服务器对应地址下放一个apple-app-site-association的json文件，内容如下：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;{
  &amp;#34;applinks&amp;#34;: {
    &amp;#34;apps&amp;#34;: [],
    &amp;#34;details&amp;#34;: [
      {
        &amp;#34;appID&amp;#34;: &amp;#34;${your team id}.${your app bundle id}&amp;#34;,
        &amp;#34;paths&amp;#34;: [
          &amp;#34;/universal_link/wechat/*&amp;#34;   //开放平台中的Universal Links Uri对应
        ]
      }
    ]
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;div id=&#34;客户端&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;客户端 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e5%ae%a2%e6%88%b7%e7%ab%af&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;这里只简单介绍下客户端集成不是本文重点。插件可以使用fluwx 或 wechat_kit。以fluwx为例：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;    await fluwx
        .authBy(
            which: NormalAuth(
          scope: &amp;#39;snsapi_userinfo&amp;#39;,
          state: &amp;#39;wechat_sdk_demo_test&amp;#39;,
        ))
        .then((value) async {});


    fluwx.addSubscriber((response) async {
      if (response is WeChatAuthResponse) {
        await getWeChatAccessToken(response.code);
        await getUserData();
        Get.back();
      }
    });    
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;插件主要是完成&lt;strong&gt;APP-&amp;gt;微信-&amp;gt;APP&lt;/strong&gt;的跳转工作，通过回调拿到code。但不是最终我们需要的openid。接着再通过接口获取openid和access_token。
详细可参考文档：
&lt;code&gt;https://developers.weixin.qq.com/doc/offiaccount/OA_Web_Apps/Wechat_webpage_authorization.html&lt;/code&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;access_token：通过code换取access_token和openid&lt;/li&gt;
&lt;li&gt;userinfo：获取微信用户基本信息&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;这里需要注意，如果你在开放平台配置的&lt;strong&gt;Universal Links&lt;/strong&gt;的不能返回200。或者&lt;strong&gt;Univeral Links&lt;/strong&gt;的域名和&lt;strong&gt;apple-app-site-association&lt;/strong&gt;文件中的域名不一致，都可能导致无法跳转。我们需要让APP重新下载配置文件，可以尝试删除APP并重启手机。&lt;/p&gt;
&lt;hr&gt;
&lt;div id=&#34;总结&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;总结 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e6%80%bb%e7%bb%93&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;总的来说，对接微信登录并不复杂，主要麻烦在于开放平台的资质认证和应用认证都分别需要审核时间。另外网上有关&lt;strong&gt;Univeral Links&lt;/strong&gt;的配置资料不少，但都不详细，导致笔记最后还是一步步踩坑才调通。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/img/wc-search.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>开发日记 —— 苹果支付指南</title>
      <link>https://vastzh.com/blog/apple_pay/</link>
      <pubDate>Fri, 26 Jan 2024 10:38:15 +0800</pubDate>
      
      <guid>https://vastzh.com/blog/apple_pay/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;上一篇文章分享了实践 Apple 登录的开发过程。 今天主要分享一下 Apple 支付的实践。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div id=&#34;前言&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;前言 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e5%89%8d%e8%a8%80&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;本次实践中，笔者采用了 &lt;strong&gt;订阅 + 一次性付费&lt;/strong&gt; 的模式。用户可根据自己的需求，选择会员订阅周期。从大部分开发者角度来说，订阅模式是比较常见的，因为订阅更有力于APP的长期发展。&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/apple_pay/p1.png&#34;
        alt=&#34;Alt text&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;hr&gt;
&lt;div id=&#34;购买项配置&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;购买项配置 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e8%b4%ad%e4%b9%b0%e9%a1%b9%e9%85%8d%e7%bd%ae&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;进入 开发者后台配置&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;在 &lt;strong&gt;App 内购买项目&lt;/strong&gt; 中创建 &lt;strong&gt;永久会员&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 &lt;strong&gt;订阅&lt;/strong&gt; 创建订阅组，后分别 &lt;strong&gt;月度会员&lt;/strong&gt; &lt;strong&gt;年度会员&lt;/strong&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/apple_pay/p2.png&#34;
        alt=&#34;Alt text&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;需要注意两点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;创建的购买项需要设置多语言，否则会出现报错 &lt;strong&gt;缺少元数据&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;审核信息的截图有设备&lt;strong&gt;尺寸限制&lt;/strong&gt;，可参考官方文档：&lt;code&gt;https://developer.apple.com/help/app-store-connect/reference/screenshot-specifications&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;hr&gt;
&lt;div id=&#34;客户端&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;客户端 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e5%ae%a2%e6%88%b7%e7%ab%af&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;我使用 &lt;strong&gt;in_app_purchase&lt;/strong&gt; 插件，在客户端进行支付。可以运行插件的example进行测试。成功运行效果如下：





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/apple_pay/p3.gif&#34;
        alt=&#34;Alt text&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;具体细节可以参考插件文档，需要注意的是，我们需要如何进行iOS订单的验证。
通过插件的demo我们看到默认返回true，所以这部分逻辑需要开发者自己实现。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  Future&amp;lt;bool&amp;gt; _verifyPurchase(PurchaseDetails purchaseDetails) async {
    // IMPORTANT!! Always verify a purchase before delivering the product.
    // For the purpose of an example, we directly return true.
    
    return Future&amp;lt;bool&amp;gt;.value(true);
  }
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;通过方法返回的类型可以得到：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;class PurchaseVerificationData {
  /// ...

  /// The data used for local verification.
  ///
  /// The data is formatted according to the specifications of the respective
  /// store. You can use the [source] field to determine the store from which
  /// the data originated and proces the data accordingly.
  final String localVerificationData;

  /// The data used for server verification.
  final String serverVerificationData;
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我们看到 &lt;strong&gt;localVerificationData&lt;/strong&gt; 用于本地验证，&lt;strong&gt;serverVerificationData&lt;/strong&gt; 用于服务器验证。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;
    final verificationData =
        purchaseDetails.verificationData.serverVerificationData;

    final Dio dio = Dio();
    dio.options.headers[&amp;#39;Accept&amp;#39;] = &amp;#39;application/json&amp;#39;;
    dio.options.headers[&amp;#39;Content-Type&amp;#39;] = &amp;#39;application/json&amp;#39;;
    var response = await dio.post(&amp;#39;https://buy.itunes.apple.com/verifyReceipt&amp;#39;,
        data: {
          &amp;#39;password&amp;#39;: password,
          &amp;#39;receipt-data&amp;#39;: verificationData
        });
    var _response = json.decode(response.toString());
    if (_response[&amp;#34;status&amp;#34;] == 21007) {
      var response = await dio
          .post(&amp;#39;https://sandbox.itunes.apple.com/verifyReceipt&amp;#39;, data: {
        &amp;#39;password&amp;#39;: password,
        &amp;#39;receipt-data&amp;#39;: verificationData
      });
    }
    if (_response[&amp;#34;status&amp;#34;] == 0) {
      return Future&amp;lt;bool&amp;gt;.value(true);
    } else {
      return Future&amp;lt;bool&amp;gt;.value(false);
    }
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;以前苹果提供了一个验证接口，可以跳过服务端进行验证，可惜在去年5月份被标记 &lt;code&gt;Deprecated(已弃用)&lt;/code&gt;，虽然目前看来还是可以使用，但是保不齐哪天就被苹果给删掉了。&lt;/strong&gt;





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/apple_pay/p4.png&#34;
        alt=&#34;Alt text&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;通过文档我们得知：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;该接口已弃用。要验证服务器上的收据，请按照在服务器上的设备上验证收据中的步骤操作。要在不使用收据的情况下验证服务器上的应用内购买，请调用App Store Server API为您的客户获取 Apple 签名的交易和订阅信息，或验证您的应用获取的签名数据。您还可以从App Store Server Notifications V2端点获取相同的签名交易和订阅信息 。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;所以需要改用 &lt;strong&gt;App Store Server API&lt;/strong&gt; 进行验证。&lt;/p&gt;
&lt;div id=&#34;获取交易信息&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;获取交易信息 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e8%8e%b7%e5%8f%96%e4%ba%a4%e6%98%93%e4%bf%a1%e6%81%af&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;https://developer.apple.com/documentation/appstoreserverapi/get_transaction_info&lt;/code&gt;
根据文档的描述，我们得知此接口我们可以获取 &lt;strong&gt;包含签名的单个交易信息的结果&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;接着，通过苹果开发后台进行配置下载 &lt;strong&gt;私钥匙文件 + KeyID + BundleID + Issuer&lt;/strong&gt; 进行验签比对订单号等数据判断交易是否成功。&lt;/p&gt;
&lt;div id=&#34;获取历史交易信息&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;获取历史交易信息 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e8%8e%b7%e5%8f%96%e5%8e%86%e5%8f%b2%e4%ba%a4%e6%98%93%e4%bf%a1%e6%81%af&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;https://developer.apple.com/documentation/appstoreserverapi/get_transaction_history&lt;/code&gt;
根据此接口我们可以获取&lt;strong&gt;包含签名的多个交易信息的结果&lt;/strong&gt;，同样验签后获取详细数据。&lt;/p&gt;
&lt;p&gt;我们可以通过此接口进行订阅到期续费情况等数据进行判断。&lt;/p&gt;
&lt;hr&gt;
&lt;div id=&#34;验签及api配置&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;验签及API配置 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e9%aa%8c%e7%ad%be%e5%8f%8aapi%e9%85%8d%e7%bd%ae&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;在此页面我们可以获取验签需要的数据 &lt;strong&gt;私钥匙文件、 KeyID + BundleID + Issuer&lt;/strong&gt;





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/apple_pay/p5.png&#34;
        alt=&#34;Alt text&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;创建沙盒账号后可进行购买订阅的测试，不会收取费用。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/apple_pay/p6.png&#34;
        alt=&#34;Alt text&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;hr&gt;
&lt;div id=&#34;内购被拒&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;内购被拒 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e5%86%85%e8%b4%ad%e8%a2%ab%e6%8b%92&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;另外，在完成所有工作发布可能会被拒，因为我之前没有订阅经验，所以遇到了一些问题。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/apple_pay/p7.png&#34;
        alt=&#34;Alt text&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;如果做了订阅我建议你完成以下步骤，如果这些步骤都做到了，那么大概率是不会被拒的。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在付费页面提供隐私政策及使用条款的入口。&lt;/li&gt;
&lt;li&gt;在使用条款中明确说明和介绍你的订阅服务，包含的服务内容、订阅周期、退订、取消订阅等信息。&lt;/li&gt;
&lt;li&gt;在APP详情页中，提供订阅服务的详细说明。&lt;/li&gt;
&lt;li&gt;提供恢复购买的功能。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如果还是不知道如何做，可以参考一些其他的APP，一般在他们的App详情页和使用条款中都有订阅相关的说明。&lt;/p&gt;
&lt;hr&gt;
&lt;div id=&#34;总结&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;总结 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e6%80%bb%e7%bb%93&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;理论上来说，&lt;strong&gt;获取交易信息&lt;/strong&gt; &lt;strong&gt;获取历史交易信息&lt;/strong&gt; 这两个接口的数据都可以放在客户端本地调用，只是验证这一步放在服务端去做比较符合逻辑。&lt;/p&gt;
&lt;p&gt;无论是全部交易接口在服务端还是验签在服务端，都可能被&lt;strong&gt;劫持&lt;/strong&gt;，即在返回客户端前，对数据进行加工处理，比如修改交易状态来欺瞒客户端。&lt;/p&gt;
&lt;p&gt;所以，最好是对接口数据进行加密。我采用对请求参数返回结构进行 &lt;strong&gt;AES&lt;/strong&gt; 加密，及时数据被劫持也无法进行修改。&lt;/p&gt;
&lt;p&gt;如果没有服务端，极端的方式是把验签放在客户端进行能跑通，因安全性问题不推荐这么做。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/img/wc-search.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>开发日记 —— 记录对接苹果登录的坑</title>
      <link>https://vastzh.com/blog/apple_login/</link>
      <pubDate>Thu, 25 Jan 2024 15:38:15 +0800</pubDate>
      
      <guid>https://vastzh.com/blog/apple_login/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;最近在开发新项目时用到了 苹果登录、微信登录和订阅支付，由于是第一次对接以上内容，踩了不少坑，记录一下。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;本文主要介绍苹果登录，我也会在之后的文章中介绍微信登录和订阅支付。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div id=&#34;前言&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;前言 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e5%89%8d%e8%a8%80&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;之前我的APP中大多数是买断式的，用户可以使用一些基本的功能，如果需要高级功能，则需要付费买断。&lt;/p&gt;
&lt;p&gt;这次介于新的项目的特点，我决定在买断的基础之外加上订阅支付，对我来说算是一种新的尝试吧。有了订阅同时也就意味着需要构建一个用户体系来管理订阅。&lt;/p&gt;
&lt;p&gt;对于订阅支付来说&lt;strong&gt;用户体系&lt;/strong&gt;更符合逻辑。但在调研过程中也发现有些APP没有做登录(用户体系)也依然有订阅支付，其主要还是依靠大部分IAP组件提供的&lt;strong&gt;恢复购买&lt;/strong&gt;功能+&lt;strong&gt;本地验证&lt;/strong&gt;接口实现的。但是这里面还是有一些坑，在下文会介绍。&lt;/p&gt;
&lt;hr&gt;
&lt;div id=&#34;正文&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;正文 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e6%ad%a3%e6%96%87&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;先看下完整的苹果登录流程：





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/apple_login/image-3.png&#34;
        alt=&#34;Alt text&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;hr&gt;
&lt;div id=&#34;1-苹果开发者后台配置&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;1. 苹果开发者后台配置 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#1-%e8%8b%b9%e6%9e%9c%e5%bc%80%e5%8f%91%e8%80%85%e5%90%8e%e5%8f%b0%e9%85%8d%e7%bd%ae&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;服务端需要的参数,可在苹果开发者后台设置。 设置App ID, 在 &lt;strong&gt;Capabilities&lt;/strong&gt; 中设置 &lt;strong&gt;Sign In with Apple&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/apple_login/a1.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  







  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/apple_login/a2.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;创建一个用来在服务端与Apple服务器交互的Key，并下载密钥文件。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/apple_login/a3.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  







  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/apple_login/a4.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;hr&gt;
&lt;div id=&#34;2-客户端配置&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;2. 客户端配置 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#2-%e5%ae%a2%e6%88%b7%e7%ab%af%e9%85%8d%e7%bd%ae&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;选择主流的Apple登录插件&lt;a href=&#34;https://pub.dev/packages/sign_in_with_apple&#34;   target=&#34;_blank&#34;&gt;
    Sign_in_with_apple&lt;/a&gt;。&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/apple_login/image.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;dependencies:
  flutter:
    sdk: flutter
  sign_in_with_apple: ^latest_version
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在登录按钮里调用方法：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;final credential = await SignInWithApple.getAppleIDCredential(
                    scopes: [
                      AppleIDAuthorizationScopes.email,
                      AppleIDAuthorizationScopes.fullName,
                    ],
                  );
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;返回结果credential的结构如下源码：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;/// Authorization details from a successful Sign in with Apple flow.
///
/// Most fields are optional in this class.
///
/// Especially [givenName], [familyName], and [email] member will only be provided on the first authorization between
/// the app and Apple ID.
///
/// The [authorizationCode] member is always present and should be used to check the authorizations with Apple servers
/// from your backend. Upon successful validation, you should create a session in your system for the current user,
/// or consider her now logged in.
@immutable
class AuthorizationCredentialAppleID {
  /// Creates an instance which contains the result of a successful Sign in with Apple flow.
  const AuthorizationCredentialAppleID({
    // 略...
  });

  // 略...

  /// An identifier associated with the authenticated user.
  ///
  /// This will always be provided on iOS and macOS systems. On Android, however, this will not be present.
  /// This will stay the same between sign ins, until the user deauthorizes your App.
  final String? userIdentifier;
 
  /// The verification code for the current authorization.
  ///
  /// This code should be used by your server component to validate the authorization with Apple within 5 minutes upon receiving it.
  final String authorizationCode;

  /// A JSON Web Token (JWT) that securely communicates information about the user to your app.
  final String? identityToken;

  // 略...
}
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;我们主要用到的是这样几个字段：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;userIdentifier&lt;/code&gt;            —— 苹果用户的唯一标识&lt;/li&gt;
&lt;li&gt;&lt;code&gt;identityToken&lt;/code&gt;             —— jwt加密的idToken,可以在通过接口获取出上面的userIdentifier&lt;/li&gt;
&lt;li&gt;&lt;code&gt;authorizationCode&lt;/code&gt;         —— 配合secret，keyId，teamId，clientId可以获取到jwt加密的idToken&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;PS: &lt;strong&gt;userIdentifier&lt;/strong&gt; 是用户唯一标识, 如果没有服务端则可以通过 &lt;strong&gt;userIdentifier&lt;/strong&gt; 直接使用但不推荐。正确安全的方式通过服务端获取，就可以用第二或第三个字段。
服务端代码可参考这里：&lt;a href=&#34;https://github.com/Timothylock/go-signin-with-apple/tree/master&#34;   target=&#34;_blank&#34;&gt;
    go-signin-with-apple&lt;/a&gt;。&lt;/p&gt;
&lt;hr&gt;
&lt;div id=&#34;3-xcode配置&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;3. XCode配置 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#3-xcode%e9%85%8d%e7%bd%ae&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;打开ios目录，在Runner（文件浏览器侧栏）-&amp;gt; Targets-&amp;gt; Runner-&amp;gt;Signing &amp;amp; Capabilities设置 Apple Developer Portal 中创建的“Bundle Identifier”





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/apple_login/image-1.png&#34;
        alt=&#34;Alt text&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;确保应用具有“使用 Apple 登录”功能（Runner（文件浏览器侧边栏）-&amp;gt; Targets-&amp;gt; Runner-&amp;gt; Signing &amp;amp; Capabilities），否则使用 Apple 登录将失败且没有视觉指示（代码仍会收到异常） ）





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/apple_login/image-2.png&#34;
        alt=&#34;Alt text&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;hr&gt;
&lt;div id=&#34;4-服务端验证&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;4. 服务端验证 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#4-%e6%9c%8d%e5%8a%a1%e7%ab%af%e9%aa%8c%e8%af%81&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;通过 &lt;strong&gt;authorizationCode&lt;/strong&gt; 获取 &lt;strong&gt;userIdentifier&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;import &amp;#34;github.com/Timothylock/go-signin-with-apple/apple&amp;#34;

client := apple.New()

vReq := apple.AppValidationTokenRequest{
	ClientID:     clientID,
	ClientSecret: secret,
	Code:         &amp;#34;authorizationCode&amp;#34;, // 客户端获取的 authorizationCode
}

var resp apple.ValidationResponse

// Do the verification
client.VerifyAppToken(context.Background(), vReq, &amp;amp;resp)

unique, _ := apple.GetUniqueID(resp.IDToken)

// Voila!
fmt.Println(unique)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;通过 &lt;strong&gt;identityToken&lt;/strong&gt; 获取 &lt;strong&gt;userIdentifier&lt;/strong&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;unique, _ := apple.GetUniqueID(params.IDToken)

claim, _ := apple.GetClaims(params.IDToken)
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;解析后，&lt;code&gt;claim[&amp;quot;sub&amp;quot;]&lt;/code&gt;是userIdentifier, &lt;code&gt;claim[aud]&lt;/code&gt;是BundleID。&lt;/p&gt;
&lt;p&gt;最后，将userIdentifier和token保存到数据库中，以上是苹果登录的配置和流程。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/img/wc-search.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>别再找代理，申请计算机软件著作登记(软著)了</title>
      <link>https://vastzh.com/blog/ccopyright/</link>
      <pubDate>Tue, 02 Jan 2024 15:38:15 +0800</pubDate>
      
      <guid>https://vastzh.com/blog/ccopyright/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;如果你想做自己的产品，软件著作权是必不可少的，尤其是在国内。比如，你做了一个软件，想让用户使用你的软件，就需要发布到软件市场，软著是必备的。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;div id=&#34;前言&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;前言 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e5%89%8d%e8%a8%80&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;个人开发者的道路是坎坷的，特别是在国内，先不说研发一款产品本身的门槛。假设我们已经完成了这一步骤，依然是无法让用户使用的你软件的。因为还没有把应用发布到应用市场。而发布应用市场就需要软著，备案等等。&lt;/p&gt;
&lt;p&gt;尤其是软著，申请流程非常繁琐，需要很多资料。所以很多开发者为了能更专心开发产品，选择让第三方代理申请软著。我也一样，曾经找了两波代理申请，但是都失败了。浪费了大量的时间。因为申请软著一般需要等待2～3个月时间，无论成功失败。&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/ccopyright/c1.png&#34;
        alt=&#34;Alt text&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;我为此花了半年时间，损失惨重。第一次申请了多个软著均都失败，耗时3个月。后来在个人开发群找了群友推荐的代理重新申请均失败。花了半年时间，气得差点一口老血喷出。&lt;/p&gt;
&lt;p&gt;最后我选择自己亲手办理。没想到花了2个多月时间，申请了四个软著，均成功。&lt;/p&gt;
&lt;div id=&#34;c6png&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/ccopyright/c6.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#c6png&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;div id=&#34;为什么要自己申请&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;为什么要自己申请？ 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e4%b8%ba%e4%bb%80%e4%b9%88%e8%a6%81%e8%87%aa%e5%b7%b1%e7%94%b3%e8%af%b7&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;有人可能会说，我看到某宝上申请代理的评价基本都能拿到，评价都很好为什么浪费时间自己申请呢？因为你压根看不到那些申请没通过的。就拿我来说，申请软著没通过后，代理商会给我两个选择：1. 再提交一次。这意味着再等待3个月。2. 退款。退还代购订单一半的金额。没错，花了一半的金额，还浪费了时间。我选择的是退款及时止损再自己申请，需要先关闭订单，代理商才会再退款给我。由于订单已经退回失效了，也就无法进行评论了。&lt;/p&gt;
&lt;div id=&#34;申请流程&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;申请流程 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e7%94%b3%e8%af%b7%e6%b5%81%e7%a8%8b&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;div id=&#34;1官网填表&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;1.官网填表 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#1%e5%ae%98%e7%bd%91%e5%a1%ab%e8%a1%a8&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;进入&lt;a href=&#34;https://register.ccopyright.com.cn/registration.html#/registerSoft&#34;   target=&#34;_blank&#34;&gt;
    软著申请官网&lt;/a&gt;，选择 &lt;strong&gt;R11 计算机软件著作权登记申请&lt;/strong&gt;.





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/ccopyright/c2.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/li&gt;
&lt;li&gt;选择 &lt;strong&gt;我是申请人&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;填写开发的基本信息，包括开发的硬件环境，操作系统，开发语言等等。&lt;/li&gt;
&lt;/ol&gt;
&lt;div id=&#34;2程序鉴别材料&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;2.程序鉴别材料 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#2%e7%a8%8b%e5%ba%8f%e9%89%b4%e5%88%ab%e6%9d%90%e6%96%99&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;这部分需要我们提交登记软件源程序连续的前30页和连续的后30页的软件源码。&lt;/p&gt;
&lt;p&gt;这里推荐一个开源程序，我就是用这个程序来提取源码的。非常感谢作者🙏。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;举个例子&lt;/strong&gt;&lt;br/&gt;
以django-guardian项目为例来说明pyerz的用法。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;克隆代码&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;git clone git@github.com:django-guardian/django-guardian.git
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;生成文档&lt;/strong&gt;&lt;br/&gt;&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;pyerz -i django-guardian -o django-guardian.docx
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;由于官网要求我们需要转pdf，我们直接通过本地&lt;strong&gt;打印&lt;/strong&gt;转换pdf格式。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://github.com/soultoolman/pyerz&#34;   target=&#34;_blank&#34;&gt;
    https://github.com/soultoolman/pyerz&lt;/a&gt;
主页有详细的文档，这里不再赘述。&lt;/p&gt;
&lt;div id=&#34;3文档鉴别材料&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;3.文档鉴别材料 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#3%e6%96%87%e6%a1%a3%e9%89%b4%e5%88%ab%e6%9d%90%e6%96%99&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;这部分其实就是产品的文档说明书。
可以在网上找到一些模版，根据模版套用自己的产品就可以了。&lt;/p&gt;
&lt;div id=&#34;4确认提交&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;4.确认提交 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#4%e7%a1%ae%e8%ae%a4%e6%8f%90%e4%ba%a4&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;&lt;strong&gt;完成以上步骤后进行提交。&lt;/strong&gt;





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/ccopyright/c3.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;div id=&#34;5提交材料&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;5.提交材料 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#5%e6%8f%90%e4%ba%a4%e6%9d%90%e6%96%99&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;完成了初步的提交后，下载签章页，盖章后提交即可。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/ccopyright/c4.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;如果没有打印扫描设备，可以找打印店去打印材料后进行盖章，扫描成文件再上传。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/ccopyright/c5.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;div id=&#34;结语&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;结语 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e7%bb%93%e8%af%ad&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;其实自己申请反而比走代理的材料要少（少了代办的盖章材料大概五六张），而且成功率更高。
很多事，我觉得可以自己多探索一下也许会有意想不到的收获。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/img/wc-search.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>不会写代码能不能开发APP</title>
      <link>https://vastzh.com/blog/wont_code_to_app/</link>
      <pubDate>Sat, 16 Dec 2023 12:27:55 +0800</pubDate>
      
      <guid>https://vastzh.com/blog/wont_code_to_app/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;最近后台有些人给我留言，问:不会写代码能不能开发App？&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;最初我回复是可以的，转念一想这事其实因人而异。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;于是我又回复我捋一捋回头写篇文章来说清楚这件事。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;如今越来越多的程序员受大环境的影响，开始考虑新的出路。有些尝试做独立开发者，开发自己的App。如果做得好可以多一份收入，万一寒潮席卷到自己也多一个抗风险能力。其中也不乏一些非程序员职能的人，想借助AI的能力开发自己的应用。那么到底不会写代码能不能开发应用？今天就来从几个方面聊聊这个话题。
&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;首先，来了解下目前最强的 AI ———— ChatGPT 的编码能力。我认为 ChatGPT 的编码能力确实很强。但也仅限于某些条件下。比如，你对GPT说，为我写一个记账程序。ChatGPT一定完成不了任务。因为ChatGPT更擅长的单一相对独立得小任务。
&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;在确定自己想做程序后，我们需要有一个大致的框架。
&lt;u&gt;比例：你想开发的程序有哪些功能模块，每个模块里显示什么内容，有哪些按钮，是如何交互的。数据怎么存储，怎么设计表结构等等。&lt;/u&gt;
&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;等这些都做完再问 ChatGPT，这样更容易得到我们想要的答案。不过此时GPT的回答，也并非一定是正确答案，很有可能当你把答案复制到编辑器运行后出现报错。这时你再把报错扔给GPT回答，有很大的可能GPT的回答无法解决问题。&lt;u&gt;要知道ChatGPT使用Transformer架构，它的回答逻辑是根据上下语预测的&lt;/u&gt;，因此就需要你有一定得编码能力能看出问题在哪里，再引导GPT纠正错误。
&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;目前大部分的编辑器都有AI辅助功能，比如VS Code，有智能提示，代码补全等功能。这些功能可以很大程度上减少我们写代码的重复工作。但是这些功能也需要我们有一定的编程能力，才能使用得心应手。&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;总的来说，AI更擅长解决单一问题，需要我们能自己把零件一个个的组装起来，拼装代码，同样也需要一定的代码能力，否则会非常痛苦，随随便便就出现报错。看到这里也许你会祈祷更强的AI出现，具体什么时候现在还不好说。
&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;说完了AI我们再聊聊什么人适合自己开发程序。我认为排在第一的还是程序员本行，无论你是前端后端，毕竟有编码基础，语言都是相通的，学起来也更快一些。再说说不会写代码的人群。如果这类人群满足我说的一到两个条件也挺适合。
&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;产品经理我认为比较适合。他们擅长将需求转化为产品，优秀的产品经理能设计出优雅产品，既能满足用户需求又能让人用的非常舒服。
&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;UI设计类，他们有较好的视觉审美，并且能做出产品原型。一个产品有哪些页面哪些交互他们会更清晰也省去设计得步骤做出来得程序ui更漂亮。
&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;还有一类，了解自己行业或某个领域痛点需求的相对极客的人群。这类人热衷前沿科技，或电子设备等等。这群人在当下AI浪潮下也一定熟悉了解AI得各类工具的使用。如果还了解一些蓝海需求那就很适合。
&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;所以不会写代码，其实没有关系，只要愿意去学再借助AI的能力还是能比较快上手的。建议可以先去网上找一门用于开发APP语言的教学视频看一遍，跟着视频做一个项目，边看边敲代码。不需要很精通，因为比较深的问题可以借助ChatGPT。当你熟悉了整个开发流程后，再考虑如何实现自己想要的程序。
&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;另外，不要想着靠APP赚钱，据我了解，大多数独立开发者中真正赚到钱的比例并不高。一个应用能否赚到钱这是多方面因素决定的事，即使你问APP做的比较成功的开发者，也很难说清成功的要素。所以要沉得住气静下心来慢慢打磨。
最好是你有一个需求而市面上的APP都满足不了，再有&lt;strong&gt;兴趣驱动&lt;/strong&gt;。这样你自己就是受众用户，根据自己的需求一点一点完善功能。当你找到有相同需求的群体时，你的程序也就慢慢起来了。在这个过程中你会得到很多成就感，也更容易坚持下去。&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;总的来说，不会写代码能不能开发APP，答案是肯定可以的。但是前提是你要有足够的兴趣，并且能坚持下来。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/img/wc-search.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>分享一个点子</title>
      <link>https://vastzh.com/blog/share_think/</link>
      <pubDate>Wed, 13 Dec 2023 11:20:15 +0800</pubDate>
      
      <guid>https://vastzh.com/blog/share_think/</guid>
      <description>&lt;div id=&#34;前言&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;前言 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e5%89%8d%e8%a8%80&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;昨天有个想法从脑海里一闪而过。想法不一定成熟，所以想借此宝地分享这个点子，和更多的人交流完善。&lt;/p&gt;
&lt;hr&gt;
&lt;div id=&#34;正文&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;正文 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e6%ad%a3%e6%96%87&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;当你点进这个主题时，相信一定是被标题所吸引。这很正常也是我的目的，v站大多数的用户都是开发者或者极客人士。&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;进入正题作为一个开发者，缺的一定不是技术而是点子。经常能在各个群或者论坛中看到“想做一个应用，但是不知道做什么”这样的言论。很多需求好像都已经存在，不再是蓝海。&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;我们要如何挖掘一些细分垂直领域的需求？这个需求一定不是所有人的需求，是特定的人群，如果你不身处其中，那永远不知道还有那样的需求。&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;现在回到一个上帝视角。我们看到了&lt;strong&gt;一群有着各种技术但是不知道做点什么的开发者&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;相对的还有另 &lt;strong&gt;一个群体有着迫切痛点和需求的用户&lt;/strong&gt; 在应用商店，搜索引擎搜半天就是找不到合适的产品。&lt;/p&gt;
&lt;hr&gt;
&lt;div id=&#34;我的点子需求&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;我的点子（需求） 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e6%88%91%e7%9a%84%e7%82%b9%e5%ad%90%e9%9c%80%e6%b1%82&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;所以我想能不能这样一个产品来衔接这两个需求方，做到规范化。&lt;br&gt;
这个产品的用户：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;需求者&lt;/strong&gt; ：可以发布自己点需求和点子。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;开发者&lt;/strong&gt; ：根据点子结合自身条件选择项目。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;需求者&lt;/strong&gt; 的点子可以操作：&lt;strong&gt;认同&lt;/strong&gt;、&lt;strong&gt;追加需求&lt;/strong&gt; 或者 &lt;strong&gt;@已有产品&lt;/strong&gt;。点子不能被任何人看到，需要&lt;strong&gt;开发者&lt;/strong&gt;支付一定货币。
&lt;strong&gt;开发者&lt;/strong&gt; 不是所有的开发者都能看到所有点子，会有一定的限制。如：之前领取的点子没有实现则会进行一定货币扣除。&lt;/p&gt;
&lt;p&gt;我没有细想，比如怎么判断一个点子的好坏，点子过度曝光等问题。因为这个点子也是我刚想到的，有兴趣的网友可以发表看法。&lt;/p&gt;
&lt;p&gt;这就类似于BOSS直聘，有求职者也就招聘的企业。&lt;/p&gt;
&lt;hr&gt;
&lt;div id=&#34;和接私活网站的区别&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;和接私活网站的区别 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e5%92%8c%e6%8e%a5%e7%a7%81%e6%b4%bb%e7%bd%91%e7%ab%99%e7%9a%84%e5%8c%ba%e5%88%ab&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;我认为最大的区别在于，平台的使用。这里的&lt;strong&gt;需求方&lt;/strong&gt; 就是一个普通人，他不需要为这个产品买单，他只是有一个迫切的需求，并且如果有更多同样需求的用户可以为其点赞。&lt;br&gt;&lt;/p&gt;
&lt;p&gt;同样的&lt;strong&gt;开发者&lt;/strong&gt; 并不是通过开发一个产品交付给用户，产品的所有权是开发者自己的。所以开发者觉得这是蓝海才会去开发，开发后也需要自己维护自己产品。&lt;/p&gt;
&lt;hr&gt;
&lt;div id=&#34;百度知道&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;百度知道 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e7%99%be%e5%ba%a6%e7%9f%a5%e9%81%93&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;相信很多人在十年前都用过 &lt;strong&gt;百度知道&lt;/strong&gt; 这个产品。当时互联网刚刚兴起，人们遇到问题时，开始在网络上寻求答案。 &lt;strong&gt;百度知道&lt;/strong&gt; 在当时提供了一个很好的解决方案。我想说的是用户找到了一个窗口可以去发表自己的问题痛点。&lt;/p&gt;
&lt;hr&gt;
&lt;div id=&#34;载体&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;载体 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e8%bd%bd%e4%bd%93&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;我认为一些论坛贴吧，就是一个不错的平台。但是不够标准化，功能也不够全面，比如再说的细一点，我们可以为以上两种用户添加标签，需求方是什么领域的要想解决什么问题等等，头脑风暴一下可以想到很多功能是论坛还无法实现的。&lt;/p&gt;
&lt;p&gt;其实各大应用商城是一个不错的载体，当用户无法搜索到满意的产品时，最直接的方式时通过应用商城上的需求或者点子模块，让用户有一个发表的窗口，同样的，作为开发者也会特别关注这里模块。&lt;/p&gt;
&lt;hr&gt;
&lt;div id=&#34;最后&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;最后 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e6%9c%80%e5%90%8e&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;期待有开发者能做出这样的产品，这样会更开放和自由，而不是应用商城。希望有兴趣网友说出自己的想法。&lt;br&gt;&lt;br&gt;
最后，用这个标题还有一个原因，想看看有多少人会被&lt;strong&gt;点子&lt;/strong&gt;这样的标题吸引。这何尝不是代表一种需求。&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>使用Android Studio，在PC上调试Flutter应用的SQLite数据库</title>
      <link>https://vastzh.com/blog/data_inspector/</link>
      <pubDate>Tue, 12 Dec 2023 15:30:20 +0800</pubDate>
      
      <guid>https://vastzh.com/blog/data_inspector/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;对于我这个独立开发小白来说，很多开发中的技巧都需要自己去摸索。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;毕竟一个人的精力时有限的，所以很多时候，经验是互相交流出来的，特别是在工作中。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;很可惜我之前做了8年后端开发，大多数的技巧也只适用于后端，所以我想把开发过程中的经验和技巧通过这种形式让更多人看到。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;自从上次研究&lt;a href=&#34;https://vastzh.com/blog/local_sync/&#34;   target=&#34;_blank&#34;&gt;
    《单机版应用如何做数据同步》&lt;/a&gt;后，应用中的本地数据我都从&lt;code&gt;Hive&lt;/code&gt;转到了&lt;code&gt;SQLite&lt;/code&gt;。
但无论是&lt;code&gt;Hive&lt;/code&gt;还是&lt;code&gt;SQLite&lt;/code&gt;，进行真机调试的时候都不够方便。原因是无法实时看到CRUD后的数据。&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;经过我的一番搜索，发现强大的 &lt;strong&gt;Android Studio&lt;/strong&gt; 本身就是支持&lt;code&gt;SQLite&lt;/code&gt;调试的。之前用&lt;code&gt;VsCode&lt;/code&gt;，装上了&lt;code&gt;Flutter&lt;/code&gt;和&lt;code&gt;Dart&lt;/code&gt;插件也算够用，虽然一直不喜欢它的主题，但是比它轻量啊，不占电脑资源，用惯也就惯了。&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;因为&lt;code&gt;SQLite&lt;/code&gt;调试又用回了&lt;code&gt;JetBrains&lt;/code&gt;系的 IDEA。顺便安利下我一直用的&lt;code&gt;Dracula Theme&lt;/code&gt;主题，个人认为配色很棒。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/data_inspector/d1.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  







  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/data_inspector/d2.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;其实 &lt;strong&gt;Android Studio&lt;/strong&gt; 在2020年发布的版本已经有了这个功能，只是用过的不多，中文搜索资料也比较少，先来看一下&lt;a href=&#34;https://developer.android.com/studio/preview/features?hl=zh-cn#database-inspector&#34;   target=&#34;_blank&#34;&gt;
    官方文档&lt;/a&gt;。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/data_inspector/d3.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;选择 &lt;strong&gt;View&lt;/strong&gt; -&amp;gt; &lt;strong&gt;Tool Windows&lt;/strong&gt; -&amp;gt; &lt;strong&gt;App Inspection&lt;/strong&gt; -&amp;gt; 选择设备 -&amp;gt; &lt;strong&gt;Database Inspector&lt;/strong&gt;





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/data_inspector/d4.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;这里有四个按钮分别是：&lt;strong&gt;刷新，查询（写SQL），DB连接保活，导出&lt;/strong&gt;。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/data_inspector/d5.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;很方便，如果你的设备性能还不错，不妨用 &lt;strong&gt;Android Studio&lt;/strong&gt; 试试。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/img/wc-search.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>上周v2ex发了个帖子火了，顺便观察了一下v友们关心的话题</title>
      <link>https://vastzh.com/blog/v2ex_topic/</link>
      <pubDate>Mon, 11 Dec 2023 16:33:51 +0800</pubDate>
      
      <guid>https://vastzh.com/blog/v2ex_topic/</guid>
      <description>&lt;div id=&#34;前言&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;前言 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e5%89%8d%e8%a8%80&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;blockquote&gt;
&lt;p&gt;上周，我在v2ex上发表了一篇文章，题目是《聊聊我在一个月抖音小红书粉丝累积到3万最后不再维护的事》。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;帖子在&lt;strong&gt;v站&lt;/strong&gt;火了，差不多连续四五天在节点榜首，也有不少人点赞收藏。我很少在v站上发帖，我记得再上一篇还是在2019年8月。
在v站发帖是因为经常看到做独立开发的小伙伴在v站推广APP，来积累种子用户。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;所以我想着通过爬虫爬取了v站上所有的帖子和评论，来对其做一些研究。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/v2ex_topic/v1.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  







  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/v2ex_topic/v2.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  


那些天，打开v站的消息提醒，全都是有关这个帖子的留言，感谢或者是收藏，差不多有500多条。要知道v站的用户总数其实并不多。每天同一时刻在线用户差不多是4000～6000左右。数据算是比较可观了。&lt;/p&gt;
&lt;p&gt;可能有些网友不知道，&lt;strong&gt;v站&lt;/strong&gt;是什么，来看下维基百科。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/v2ex_topic/v3.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  


也就是说&lt;strong&gt;v站&lt;/strong&gt;是一个面向程序员，极客人群分享交流的社区。这也同时说明这里的用户画像都是基于程序员和极客人群的。
这让我猛然产生了好奇心，我想知道这类的人群，当下的大环境关心哪些话题，所以我想着通过爬虫爬取了v站上所有的帖子和评论，来做一些数据分析。&lt;/p&gt;
&lt;div id=&#34;如何分析&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;如何分析 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e5%a6%82%e4%bd%95%e5%88%86%e6%9e%90&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;我的计划很简单，就是爬取v站所有的内容。要想写这样一个爬虫其实也比较花时间，我在Github调研了很多爬虫脚本和框架，在此要感谢为爱发电的开源力量。我使用了名为&lt;a href=&#34;https://github.com/oldshensheep/v2ex_scrapy&#34;   target=&#34;_blank&#34;&gt;
    v2ex_scrapy&lt;/a&gt;的爬虫脚本进行了内容收集，用起来非常舒服，非常感谢作者。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/v2ex_topic/v4.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  







  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/v2ex_topic/v5.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;同时我尝试了使用 &lt;strong&gt;Chatgpt&lt;/strong&gt; 最新的 gpts 功能，尝试把爬下来的整个 &lt;strong&gt;sqlite&lt;/strong&gt; 作为 gpts 的数据库，想让gpts来为我做数据分析的业务。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/v2ex_topic/v6.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  


很可惜 &lt;strong&gt;Chatgpt&lt;/strong&gt; 对中文分词的支持能力比较差，没法完成任务。不过也根据提示了解到 &lt;strong&gt;Python&lt;/strong&gt; 的 jieba 库来做分词。于是调研了一下 &lt;code&gt;jieba&lt;/code&gt; 和 &lt;code&gt;wordclound&lt;/code&gt; 开始敲代码。&lt;/p&gt;
&lt;div id=&#34;词云图&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;词云图 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e8%af%8d%e4%ba%91%e5%9b%be&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;先来看看v友们平时都聊的话题。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/v2ex_topic/v7.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  


我们根据词云图中内容的大小了解到，词频的频率。&lt;br&gt;
从图上可以看出排名靠前的词都是和程序员有关的。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;上一张词图是所有帖子的，现在把时间锁定到新冠爆发半年后开始(经济开始下行)。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/v2ex_topic/v8.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  


乍一看好像没有明显的变化还是围绕着程序员相关。我发现两个有趣的地方，一、开始流行一个词&lt;code&gt;迫于&lt;/code&gt;大多流行在二手交易节点。二、Mac苹果系始终是这群人的焦点。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;最后这张词云图把时间锁定在了去年十一月之后，chatgpt横空出世。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/v2ex_topic/v9.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  


在这一时段，出现大量的Chatgpt，会员，API，openAI等新的词汇。&lt;/p&gt;
&lt;hr&gt;
&lt;div id=&#34;每月新增&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;每月新增 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e6%af%8f%e6%9c%88%e6%96%b0%e5%a2%9e&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;接下来我们看一下每月新增帖子和评论数量。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/v2ex_topic/v10.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  


可以看到大多数人还是以一个看热闹的心态在v站闲逛，回复数要远高于发帖数。&lt;br&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;div id=&#34;按小时聚合&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;按小时聚合 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e6%8c%89%e5%b0%8f%e6%97%b6%e8%81%9a%e5%90%88&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;另外，我统计了所有的帖子和回复评论的发布时间段，有个很有趣的现象。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/v2ex_topic/v11.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/v2ex_topic/v12.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  


细心的你一定发现了，抛开0-7点睡眠时间外，上午是逛v站的高峰，中午饭点有所下降，下午又一波小高峰直到下班时间开始下降。&lt;br&gt;&lt;br&gt;
有人会说很多都是周末数据，其实我已经把周六周日的数据给过滤了。&lt;br&gt;
&lt;strong&gt;澄清一下，这些数据只是相对来说逛论坛的分析，不代表所有人都在这些时间点摸鱼，这是所有数据的总和。&lt;/strong&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;div id=&#34;前十数据&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;前十数据 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e5%89%8d%e5%8d%81%e6%95%b0%e6%8d%ae&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;最后，看看所有帖子排名靠前的都是哪些。&lt;/p&gt;
&lt;div id=&#34;感谢最多的前十&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h4 class=&#34;relative group&#34;&gt;感谢最多的前十 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e6%84%9f%e8%b0%a2%e6%9c%80%e5%a4%9a%e7%9a%84%e5%89%8d%e5%8d%81&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h4&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/v2ex_topic/v13.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;div id=&#34;收藏最多的前十&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h4 class=&#34;relative group&#34;&gt;收藏最多的前十 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e6%94%b6%e8%97%8f%e6%9c%80%e5%a4%9a%e7%9a%84%e5%89%8d%e5%8d%81&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h4&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/v2ex_topic/v14.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;div id=&#34;点击最多的前十&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h4 class=&#34;relative group&#34;&gt;点击最多的前十 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e7%82%b9%e5%87%bb%e6%9c%80%e5%a4%9a%e7%9a%84%e5%89%8d%e5%8d%81&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h4&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/v2ex_topic/v15.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;div id=&#34;投票最多的前十&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h4 class=&#34;relative group&#34;&gt;投票最多的前十 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e6%8a%95%e7%a5%a8%e6%9c%80%e5%a4%9a%e7%9a%84%e5%89%8d%e5%8d%81&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h4&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/v2ex_topic/v16.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;div id=&#34;总结&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;总结 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e6%80%bb%e7%bb%93&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;总的来说，&lt;code&gt;v2ex&lt;/code&gt; 还是很有意思的一个&lt;strong&gt;社区&lt;/strong&gt;，在这里包罗了所有&lt;strong&gt;程序员、极客，工作和生活上的有趣的内容&lt;/strong&gt;。也是这个群里摸鱼的一个好去处，当然在这里你也能看到一些，学到一些。
我也常常在v站潜水。最近发帖才知道，原来帖子发出后有一个保护期超过这个时间后，帖子将无法修改也无法删除，所以在这里发言还是要慎重一些。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;一些 Tips：&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;本文的数据来源都是&lt;a href=&#34;https://github.com/oldshensheep/v2ex_scrapy&#34;   target=&#34;_blank&#34;&gt;
    v2ex_scrapy&lt;/a&gt;开源项目中获得。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;由于个人电脑原因我爬取的时间经常在半夜中断，时间也比较长最后选择之后了作者之前爬取更新至2023-7-22为止的数据。我用自己写的脚本对数据进行二次加工进行最终分析统计。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;部分图表是把脚本跑完的数据传给chatgpt，最终由gpt生成。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/img/wc-search.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>个人博客 —— 集成Cusdis评论系统</title>
      <link>https://vastzh.com/blog/hugo_comment/</link>
      <pubDate>Fri, 01 Dec 2023 15:23:41 +0800</pubDate>
      
      <guid>https://vastzh.com/blog/hugo_comment/</guid>
      <description>&lt;div id=&#34;前言&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;前言 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e5%89%8d%e8%a8%80&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;虽然&lt;strong&gt;个人博客&lt;/strong&gt;我们已经做的越来越完善，但是对于用 &lt;strong&gt;Hugo&lt;/strong&gt; 搭建的全静态化博客来说，还缺少&lt;strong&gt;评论系统&lt;/strong&gt;。
&lt;a href=&#34;https://cusdis.com/&#34;   target=&#34;_blank&#34;&gt;
    Cusdis&lt;/a&gt; 是非常不错的解决方案，足够轻量、支持自建、UI简洁、开源。&lt;/p&gt;
&lt;hr&gt;
&lt;div id=&#34;什么是cusdis&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;什么是Cusdis？ 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e4%bb%80%e4%b9%88%e6%98%afcusdis&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://cusdis.com/&#34;   target=&#34;_blank&#34;&gt;
    Cusdis&lt;/a&gt; 是&lt;strong&gt;Disqus&lt;/strong&gt;的开源项目、轻量级（约5kb gzip）、隐私友好的绝佳替代品，主要用于纯静态化网站。
Cusdis 并非旨在成为 Disqus 的完整替代品。它的目的是为小型网站（例如您的静态博客）实现一个极简主义和可嵌入的评论系统。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;优点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Cusdis 是开源的并且可以自我托管&lt;/li&gt;
&lt;li&gt;SDK 是轻量级的（~5kb gzipped）&lt;/li&gt;
&lt;li&gt;Cusdis 不需要用户登录即可发表评论，不使用Cookie&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;缺点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;没有垃圾邮件过滤必须手动审核评论，在批准之前不会显示评论（也可看作优点）&lt;/li&gt;
&lt;li&gt;Cusdis 正处于其开发的早期阶段&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;官方文档：&lt;a href=&#34;https://cusdis.com/doc#/&#34;   target=&#34;_blank&#34;&gt;
    Cusdis Doc&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;div id=&#34;集成cusdis&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;集成Cusdis 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e9%9b%86%e6%88%90cusdis&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;

  



&lt;div
  
    class=&#34;flex px-4 py-3 rounded-md bg-primary-100 dark:bg-primary-900&#34;
  &gt;

  &lt;span
    
      class=&#34;text-primary-400 ltr:pr-3 rtl:pl-3 flex items-center&#34;
    &gt;

    

  &lt;span class=&#34;relative block icon&#34;&gt;
    &lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 512 512&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M506.3 417l-213.3-364c-16.33-28-57.54-28-73.98 0l-213.2 364C-10.59 444.9 9.849 480 42.74 480h426.6C502.1 480 522.6 445 506.3 417zM232 168c0-13.25 10.75-24 24-24S280 154.8 280 168v128c0 13.25-10.75 24-23.1 24S232 309.3 232 296V168zM256 416c-17.36 0-31.44-14.08-31.44-31.44c0-17.36 14.07-31.44 31.44-31.44s31.44 14.08 31.44 31.44C287.4 401.9 273.4 416 256 416z&#34;/&gt;&lt;/svg&gt;

  &lt;/span&gt;


  &lt;/span&gt;

  &lt;span
    
      class=&#34;dark:text-neutral-300&#34;
    &gt;文章使用简单的托管方式进行集成。&lt;/span&gt;
&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;完成注册后，进入 &lt;code&gt;控制面板&lt;/code&gt;, 点击 &lt;strong&gt;Embeded code&lt;/strong&gt;，拷贝代码。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/hugo_comment/comment.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;在 &lt;strong&gt;博客源码仓库&lt;/strong&gt; 本地项目，进入目录 &lt;code&gt;layouts/partials&lt;/code&gt; 创建 &lt;code&gt;comments.html&lt;/code&gt; 文件，写入代码。我们创建的layouts文件 &lt;strong&gt;优先级&lt;/strong&gt; 高于主题默认的文件。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;&amp;lt;br&amp;gt;
&amp;lt;br&amp;gt;
&amp;lt;h3&amp;gt;评论&amp;lt;/h3&amp;gt;
&amp;lt;div style=&amp;#34;width: 35px; height: 3px; background-color: rgb(42,77,208); margin-top: 10px; border-radius: 10px;&amp;#34;&amp;gt;&amp;lt;/div&amp;gt;
&amp;lt;br/&amp;gt;
&amp;lt;div id=&amp;#34;cusdis_thread&amp;#34;
  data-host=&amp;#34;https://cusdis.com&amp;#34;
  data-app-id=&amp;lt;&amp;lt;data-app-id&amp;gt;&amp;gt;
  data-page-id=&amp;#34;{{ .File.UniqueID }}&amp;#34;
  data-page-url=&amp;#34;{{ .RelPermalink }}&amp;#34;
  data-page-title=&amp;#34;{{ .Title }}&amp;#34;
&amp;gt;&amp;lt;/div&amp;gt;

{{- $js := resources.GetRemote &amp;#34;https://cusdis.com/js/widget/lang/zh-cn.js&amp;#34; | js.Build (dict &amp;#34;minify&amp;#34; true) -}}
&amp;lt;script type=&amp;#39;text/javascript&amp;#39;&amp;gt;
  {{ $js.Content | safeJS }}
&amp;lt;/script&amp;gt;

{{- $js := resources.GetRemote &amp;#34;https://cusdis.com/js/cusdis.es.js&amp;#34; | js.Build (dict &amp;#34;minify&amp;#34; true) -}}
&amp;lt;script type=&amp;#39;text/javascript&amp;#39;&amp;gt;
  {{ $js.Content | safeJS }}
&amp;lt;/script&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;将&lt;code&gt;cusdis_thread&lt;/code&gt; 代码块替换刚才 &lt;strong&gt;cusdis&lt;/strong&gt; 的内容。&lt;/li&gt;
&lt;li&gt;回到 &lt;strong&gt;终端&lt;/strong&gt; 在 &lt;strong&gt;博客源本地代码仓库&lt;/strong&gt; 根目录下运行 &lt;code&gt;hugo&lt;/code&gt; 命令, 重新生成博客的 &lt;code&gt;静态HTML代码&lt;/code&gt;。&lt;/li&gt;
&lt;li&gt;最后 &lt;code&gt;cd public&lt;/code&gt; 进入到 &lt;code&gt;public&lt;/code&gt; 目录，将最后生成的 &lt;code&gt;静态HTML代码&lt;/code&gt; &lt;strong&gt;push&lt;/strong&gt;到 &lt;strong&gt;GitHub Pages&lt;/strong&gt; 仓库。&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;div id=&#34;此时可以看到文章详情页底部出现评论模块&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h4 class=&#34;relative group&#34;&gt;此时可以看到文章详情页底部出现&lt;strong&gt;评论模块&lt;/strong&gt;。 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e6%ad%a4%e6%97%b6%e5%8f%af%e4%bb%a5%e7%9c%8b%e5%88%b0%e6%96%87%e7%ab%a0%e8%af%a6%e6%83%85%e9%a1%b5%e5%ba%95%e9%83%a8%e5%87%ba%e7%8e%b0%e8%af%84%e8%ae%ba%e6%a8%a1%e5%9d%97&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h4&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/hugo_comment/comment2.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;hr&gt;
&lt;div id=&#34;进入cusdis后台可以看到所有的评论&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h4 class=&#34;relative group&#34;&gt;进入cusdis后台可以看到所有的评论 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e8%bf%9b%e5%85%a5cusdis%e5%90%8e%e5%8f%b0%e5%8f%af%e4%bb%a5%e7%9c%8b%e5%88%b0%e6%89%80%e6%9c%89%e7%9a%84%e8%af%84%e8%ae%ba&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h4&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/hugo_comment/comment3.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/img/wc-search.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>个人博客 —— 配置域名 &amp; Cloudfare 优化加速</title>
      <link>https://vastzh.com/blog/hugo_domain/</link>
      <pubDate>Fri, 01 Dec 2023 14:23:41 +0800</pubDate>
      
      <guid>https://vastzh.com/blog/hugo_domain/</guid>
      <description>&lt;div id=&#34;前言&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;前言 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e5%89%8d%e8%a8%80&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;我们已经用 Hugo 搭建了个人博客，并通过配置 Firebase 来记录用户浏览量和点赞数。本文将介绍如何使用自己的域名，而不是 &lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt;，也更利于搜索引擎收录。&lt;/p&gt;

  



&lt;div
  
    class=&#34;flex px-4 py-3 rounded-md bg-primary-100 dark:bg-primary-900&#34;
  &gt;

  &lt;span
    
      class=&#34;text-primary-400 ltr:pr-3 rtl:pl-3 flex items-center&#34;
    &gt;

    

  &lt;span class=&#34;relative block icon&#34;&gt;
    &lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 512 512&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M506.3 417l-213.3-364c-16.33-28-57.54-28-73.98 0l-213.2 364C-10.59 444.9 9.849 480 42.74 480h426.6C502.1 480 522.6 445 506.3 417zM232 168c0-13.25 10.75-24 24-24S280 154.8 280 168v128c0 13.25-10.75 24-23.1 24S232 309.3 232 296V168zM256 416c-17.36 0-31.44-14.08-31.44-31.44c0-17.36 14.07-31.44 31.44-31.44s31.44 14.08 31.44 31.44C287.4 401.9 273.4 416 256 416z&#34;/&gt;&lt;/svg&gt;

  &lt;/span&gt;


  &lt;/span&gt;

  &lt;span
    
      class=&#34;dark:text-neutral-300&#34;
    &gt;本篇教程假设你已经：&lt;/span&gt;
&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;购买了一个域名&lt;/li&gt;
&lt;li&gt;已经做了域名备案&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;div id=&#34;1-配置-github-pages-域名&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;1. 配置 Github Pages 域名 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#1-%e9%85%8d%e7%bd%ae-github-pages-%e5%9f%9f%e5%90%8d&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;打开 Github 网站，进入之前创建的 &lt;strong&gt;GitHub Pages&lt;/strong&gt; 仓库，点击上方 &lt;code&gt;Settings&lt;/code&gt; 后进入设置页面，点击左侧 &lt;code&gt;Pages&lt;/code&gt;。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/hugo_domain/domain1.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/li&gt;
&lt;li&gt;在 &lt;strong&gt;Custom domain&lt;/strong&gt; 输入域名后 &lt;strong&gt;保存&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;自定义域名需要在 &lt;strong&gt;Github Pages&lt;/strong&gt; 项目根目录下创建 &lt;strong&gt;CNAME&lt;/strong&gt; 文件，写入你的 &lt;strong&gt;域名&lt;/strong&gt;。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/hugo_domain/domain2.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;div id=&#34;2-利用-cloudflare-为网站添加https-防止-dos-攻击&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;2. 利用 Cloudflare 为网站添加Https 防止 DoS 攻击 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#2-%e5%88%a9%e7%94%a8-cloudflare-%e4%b8%ba%e7%bd%91%e7%ab%99%e6%b7%bb%e5%8a%a0https-%e9%98%b2%e6%ad%a2-dos-%e6%94%bb%e5%87%bb&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;注册并登入 &lt;strong&gt;Cloudflare&lt;/strong&gt;, 并 &lt;strong&gt;添加站点&lt;/strong&gt;。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/hugo_domain/domain3.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;选择免费的版本即可。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/hugo_domain/domain4.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将 &lt;strong&gt;Cloudflare DNS&lt;/strong&gt;，覆盖购买域名厂商的 &lt;strong&gt;DNS 服务器&lt;/strong&gt;。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/hugo_domain/domain5.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;确定之后回到 &lt;strong&gt;Cloudflare&lt;/strong&gt;，等了几分钟会解析成功，此时需要进行 &lt;code&gt;DNS&lt;/code&gt; 设置&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;ul&gt;
&lt;li&gt;&lt;code&gt;ping&lt;/code&gt;一下&lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt;，得到对应的 &lt;code&gt;IP&lt;/code&gt; 解析道自定义域名。&lt;/li&gt;
&lt;li&gt;将 &lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt; 域名设置 &lt;code&gt;CNAME&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/hugo_domain/domain6.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  







  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/hugo_domain/domain7.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;ol start=&#34;5&#34;&gt;
&lt;li&gt;
&lt;p&gt;点击左侧 &lt;strong&gt;SSL/TLS&lt;/strong&gt;，进入概述，选择 &lt;strong&gt;完全&lt;/strong&gt;。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/hugo_domain/domain8.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;点击左侧 &lt;strong&gt;规则&lt;/strong&gt;，进入页面规则，选择 &lt;strong&gt;创建页面规则&lt;/strong&gt;。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/hugo_domain/domain9.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;到这就设置完成了，此时可以用 &lt;strong&gt;域名&lt;/strong&gt; 访问 &lt;strong&gt;博客&lt;/strong&gt; 了。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/img/wc-search.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>个人博客 —— 配置Firebase记录浏览量与点赞数</title>
      <link>https://vastzh.com/blog/hugo_firebase/</link>
      <pubDate>Fri, 01 Dec 2023 11:23:41 +0800</pubDate>
      
      <guid>https://vastzh.com/blog/hugo_firebase/</guid>
      <description>&lt;div id=&#34;接上一篇如何搭建零成本个人博客&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;接上一篇「如何搭建零成本个人博客」 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e6%8e%a5%e4%b8%8a%e4%b8%80%e7%af%87%e5%a6%82%e4%bd%95%e6%90%ad%e5%bb%ba%e9%9b%b6%e6%88%90%e6%9c%ac%e4%b8%aa%e4%ba%ba%e5%8d%9a%e5%ae%a2&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;我们已经成功用 Hugo 搭建了个人博客，通过在浏览器访问与 &lt;strong&gt;GitHub Pages 仓库&lt;/strong&gt; 同名域名的方式 &lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt; 即可看到博客内容。博客文章的浏览量和点赞数是观察文章内容质量的重要数据。通过本文我们来了解如何通过配置 Firebase 来记录用户浏览量和点赞数。&lt;/p&gt;
&lt;hr&gt;
&lt;div id=&#34;1-什么是firebase&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;1. 什么是Firebase？ 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#1-%e4%bb%80%e4%b9%88%e6%98%affirebase&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://firebase.google.com/&#34;   target=&#34;_blank&#34;&gt;
    Firebase&lt;/a&gt; 是一个由谷歌开发的平台，它提供了多种工具和服务，包括：云端数据库、身份验证、数据分析、托管等功能，帮助开发人员更快、更方便地创建和运行应用程序。 Firebase 有两个版本，这里我们选择免费的 Spark 版本就完全够用。&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/hugo_firebase/spark.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;hr&gt;
&lt;div id=&#34;2-如何进行配置&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;2. 如何进行配置 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#2-%e5%a6%82%e4%bd%95%e8%bf%9b%e8%a1%8c%e9%85%8d%e7%bd%ae&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;通过 Google 账号登录后，进行 &lt;strong&gt;项目&lt;/strong&gt; 添加。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;输入一个名称 blog 或任意其他。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/hugo_firebase/add_project1.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/li&gt;
&lt;li&gt;默认开启分析即可，继续。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/hugo_firebase/add_project2.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/li&gt;
&lt;li&gt;选择默认账号即可，创建 &lt;strong&gt;项目&lt;/strong&gt;。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/hugo_firebase/add_project3.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/li&gt;
&lt;li&gt;片刻后自动进入项目，我们选择 &lt;strong&gt;网页&lt;/strong&gt; 应用。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/hugo_firebase/add_project4.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/li&gt;
&lt;li&gt;输入 &lt;strong&gt;应用名称&lt;/strong&gt; 后，我们会看到 Hugo 所需的配置数据。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/hugo_firebase/add_project5.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/li&gt;
&lt;li&gt;回到 &lt;strong&gt;博客源本地代码仓库&lt;/strong&gt; 中，在 &lt;code&gt;config/_default&lt;/code&gt; 文件夹下打开 &lt;code&gt;params.toml&lt;/code&gt;, 覆盖原有的 &lt;code&gt;[firebase]&lt;/code&gt; 标签。&lt;/li&gt;
&lt;/ol&gt;

  



&lt;div
  
    class=&#34;flex px-4 py-3 rounded-md bg-primary-100 dark:bg-primary-900&#34;
  &gt;

  &lt;span
    
      class=&#34;text-primary-400 ltr:pr-3 rtl:pl-3 flex items-center&#34;
    &gt;

    

  &lt;span class=&#34;relative block icon&#34;&gt;
    &lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 512 512&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M506.3 417l-213.3-364c-16.33-28-57.54-28-73.98 0l-213.2 364C-10.59 444.9 9.849 480 42.74 480h426.6C502.1 480 522.6 445 506.3 417zM232 168c0-13.25 10.75-24 24-24S280 154.8 280 168v128c0 13.25-10.75 24-23.1 24S232 309.3 232 296V168zM256 416c-17.36 0-31.44-14.08-31.44-31.44c0-17.36 14.07-31.44 31.44-31.44s31.44 14.08 31.44 31.44C287.4 401.9 273.4 416 256 416z&#34;/&gt;&lt;/svg&gt;

  &lt;/span&gt;


  &lt;/span&gt;

  &lt;span
    
      class=&#34;dark:text-neutral-300&#34;
    &gt;需选择支持 &lt;strong&gt;Firebase&lt;/strong&gt; 的主题，本文假设使用 &lt;strong&gt;Blowfish&lt;/strong&gt; 主题。&lt;/span&gt;
&lt;/div&gt;

&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/hugo_firebase/add_project6.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;hr&gt;
&lt;div id=&#34;3-配置-authentication&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;3. 配置 Authentication 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#3-%e9%85%8d%e7%bd%ae-authentication&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;左侧导航栏选择 &lt;strong&gt;所有产品&lt;/strong&gt;，选择 Authentication，点击 &lt;strong&gt;开始&lt;/strong&gt;。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/hugo_firebase/add_project7.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;点击 &lt;code&gt;Sign-in method&lt;/code&gt;，下面选择 &lt;strong&gt;匿名&lt;/strong&gt;，开启 &lt;strong&gt;匿名&lt;/strong&gt;。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/hugo_firebase/add_project8.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;div id=&#34;4-配置-firestore&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;4. 配置 Firestore 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#4-%e9%85%8d%e7%bd%ae-firestore&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;左侧导航栏选择 &lt;strong&gt;所有产品&lt;/strong&gt;，选择 Cloud Firestore &lt;strong&gt;创建数据库&lt;/strong&gt;。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/hugo_firebase/add_project9.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/li&gt;
&lt;li&gt;以 &lt;strong&gt;生产模式&lt;/strong&gt; 启用后，点击修改 &lt;strong&gt;规则&lt;/strong&gt;，覆盖原有规则。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;rules_version = &amp;#39;2&amp;#39;;
service cloud.firestore {
  match /databases/{database}/documents {
    match /{document=**} {
      allow read, write: if request.auth != null;
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;div id=&#34;5-发布代码&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;5. 发布代码 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#5-%e5%8f%91%e5%b8%83%e4%bb%a3%e7%a0%81&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;回到 &lt;strong&gt;博客源本地代码仓库&lt;/strong&gt; 中，&lt;strong&gt;终端&lt;/strong&gt; 在根目录下运行 &lt;code&gt;hugo server&lt;/code&gt; 命令进行测试，在浏览器访问 &lt;code&gt;http://localhost:1313/&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;右击鼠标，选择 &lt;strong&gt;显示网页源代码&lt;/strong&gt;，此时可以看到之前配置的&lt;strong&gt;参数&lt;/strong&gt;。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/hugo_firebase/add_project10.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;回到 &lt;strong&gt;终端&lt;/strong&gt; 在 &lt;strong&gt;博客源本地代码仓库&lt;/strong&gt; 根目录下运行 &lt;code&gt;hugo&lt;/code&gt; 命令, 重新生成博客的 &lt;code&gt;静态HTML代码&lt;/code&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;最后 &lt;code&gt;cd public&lt;/code&gt; 进入到 &lt;code&gt;public&lt;/code&gt; 目录，将最后生成的 &lt;code&gt;静态HTML代码&lt;/code&gt; &lt;strong&gt;push&lt;/strong&gt;到 &lt;strong&gt;GitHub Pages&lt;/strong&gt; 仓库。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;回到 &lt;strong&gt;博客&lt;/strong&gt; 的网页，此时 &lt;strong&gt;浏览数&lt;/strong&gt; 和 &lt;strong&gt;点赞数&lt;/strong&gt; 都会进行相应记录显示，在FireStore数据库也会产生相应的数据。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/hugo_firebase/add_project11.png&#34;
        alt=&#34;Alt text&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/img/wc-search.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>如何搭建零成本个人博客</title>
      <link>https://vastzh.com/blog/how_build_blog/</link>
      <pubDate>Thu, 30 Nov 2023 09:22:12 +0800</pubDate>
      
      <guid>https://vastzh.com/blog/how_build_blog/</guid>
      <description>&lt;div id=&#34;0-前言&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;0. 前言 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#0-%e5%89%8d%e8%a8%80&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;最近，除了用公众号来记录自己学到的东西之外，也同时维护了这个博客。博客虽然是一个很古外的产物，但是听起来是很Geek的事。独立的域名、服务器、创作内容组成。
个人博客设置了一道技术门栏，虽然技术本身不难，但是阻碍了不少人链接世界，少了一种方法。&lt;/p&gt;
&lt;p&gt;通过本文你将学会一种零成本搭建个人博客的方法。&lt;/p&gt;
&lt;hr&gt;
&lt;div id=&#34;1-介绍&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;1. 介绍 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#1-%e4%bb%8b%e7%bb%8d&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;div id=&#34;11-什么是-github-pages&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;1.1 什么是 GitHub Pages？ 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#11-%e4%bb%80%e4%b9%88%e6%98%af-github-pages&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://pages.github.com/&#34;   target=&#34;_blank&#34;&gt;
    GitHub Pages&lt;/a&gt; 是一组静态网页集合（Static Web Page），这些静态网页由 &lt;a href=&#34;https://github.com/&#34;   target=&#34;_blank&#34;&gt;
    GitHub&lt;/a&gt; 托管（host）和发布，所以是 GitHub + Pages。&lt;/p&gt;
&lt;div id=&#34;12-什么是-hugo&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;1.2 什么是 Hugo？ 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#12-%e4%bb%80%e4%b9%88%e6%98%af-hugo&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;&lt;a href=&#34;https://gohugo.io/&#34;   target=&#34;_blank&#34;&gt;
    Hugo&lt;/a&gt; 是用 Go 语言写的静态网站生成器（Static Site Generator）。可以把 Markdown 文件转化成 HTML 文件。相比于WordPress更轻量。&lt;/p&gt;
&lt;div id=&#34;13-github仓库&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;1.3 Github仓库 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#13-github%e4%bb%93%e5%ba%93&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;我们需要在Github中创建两个仓库：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;博客源码仓库&lt;/strong&gt;：储存用 Hugo 写的所有 Markdown 源文件及图像、音频或视频文件。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;GitHub Pages 仓库&lt;/strong&gt;：储存用 Hugo 命令生成的静态 Html 文件，最后网页显示的内容。&lt;/li&gt;
&lt;/ul&gt;
&lt;div id=&#34;14-运行环境&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;1.4 运行环境 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#14-%e8%bf%90%e8%a1%8c%e7%8e%af%e5%a2%83&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;

  



&lt;div
  
    class=&#34;flex px-4 py-3 rounded-md bg-primary-100 dark:bg-primary-900&#34;
  &gt;

  &lt;span
    
      class=&#34;text-primary-400 ltr:pr-3 rtl:pl-3 flex items-center&#34;
    &gt;

    

  &lt;span class=&#34;relative block icon&#34;&gt;
    &lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 512 512&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M506.3 417l-213.3-364c-16.33-28-57.54-28-73.98 0l-213.2 364C-10.59 444.9 9.849 480 42.74 480h426.6C502.1 480 522.6 445 506.3 417zM232 168c0-13.25 10.75-24 24-24S280 154.8 280 168v128c0 13.25-10.75 24-23.1 24S232 309.3 232 296V168zM256 416c-17.36 0-31.44-14.08-31.44-31.44c0-17.36 14.07-31.44 31.44-31.44s31.44 14.08 31.44 31.44C287.4 401.9 273.4 416 256 416z&#34;/&gt;&lt;/svg&gt;

  &lt;/span&gt;


  &lt;/span&gt;

  &lt;span
    
      class=&#34;dark:text-neutral-300&#34;
    &gt;本篇教程假设你已经：&lt;/span&gt;
&lt;/div&gt;

&lt;ol&gt;
&lt;li&gt;了解基本的终端命令行知识，如：&lt;code&gt;cd&lt;/code&gt;, &lt;code&gt;ls&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;安装了 &lt;a href=&#34;https://git-scm.com/&#34;   target=&#34;_blank&#34;&gt;
    Git&lt;/a&gt;，并且了解基本的 Git 知识&lt;/li&gt;
&lt;li&gt;有 

  &lt;span class=&#34;relative inline-block align-text-bottom icon&#34;&gt;
    &lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 496 512&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M165.9 397.4c0 2-2.3 3.6-5.2 3.6-3.3.3-5.6-1.3-5.6-3.6 0-2 2.3-3.6 5.2-3.6 3-.3 5.6 1.3 5.6 3.6zm-31.1-4.5c-.7 2 1.3 4.3 4.3 4.9 2.6 1 5.6 0 6.2-2s-1.3-4.3-4.3-5.2c-2.6-.7-5.5.3-6.2 2.3zm44.2-1.7c-2.9.7-4.9 2.6-4.6 4.9.3 2 2.9 3.3 5.9 2.6 2.9-.7 4.9-2.6 4.6-4.6-.3-1.9-3-3.2-5.9-2.9zM244.8 8C106.1 8 0 113.3 0 252c0 110.9 69.8 205.8 169.5 239.2 12.8 2.3 17.3-5.6 17.3-12.1 0-6.2-.3-40.4-.3-61.4 0 0-70 15-84.7-29.8 0 0-11.4-29.1-27.8-36.6 0 0-22.9-15.7 1.6-15.4 0 0 24.9 2 38.6 25.8 21.9 38.6 58.6 27.5 72.9 20.9 2.3-16 8.8-27.1 16-33.7-55.9-6.2-112.3-14.3-112.3-110.5 0-27.5 7.6-41.3 23.6-58.9-2.6-6.5-11.1-33.3 2.6-67.9 20.9-6.5 69 27 69 27 20-5.6 41.5-8.5 62.8-8.5s42.8 2.9 62.8 8.5c0 0 48.1-33.6 69-27 13.7 34.7 5.2 61.4 2.6 67.9 16 17.7 25.8 31.5 25.8 58.9 0 96.5-58.9 104.2-114.8 110.5 9.2 7.9 17 22.9 17 46.4 0 33.7-.3 75.4-.3 83.6 0 6.5 4.6 14.4 17.3 12.1C428.2 457.8 496 362.9 496 252 496 113.3 383.5 8 244.8 8zM97.2 352.9c-1.3 1-1 3.3.7 5.2 1.6 1.6 3.9 2.3 5.2 1 1.3-1 1-3.3-.7-5.2-1.6-1.6-3.9-2.3-5.2-1zm-10.8-8.1c-.7 1.3.3 2.9 2.3 3.9 1.6 1 3.6.7 4.3-.7.7-1.3-.3-2.9-2.3-3.9-2-.6-3.6-.3-4.3.7zm32.4 35.6c-1.6 1.3-1 4.3 1.3 6.2 2.3 2.3 5.2 2.6 6.5 1 1.3-1.3.7-4.3-1.3-6.2-2.2-2.3-5.2-2.6-6.5-1zm-11.4-14.7c-1.6 1-1.6 3.6 0 5.9 1.6 2.3 4.3 3.3 5.6 2.3 1.6-1.3 1.6-3.9 0-6.2-1.4-2.3-4-3.3-5.6-2z&#34;/&gt;&lt;/svg&gt;

  &lt;/span&gt;

 &lt;a href=&#34;https://github.com/&#34;   target=&#34;_blank&#34;&gt;
    GitHub&lt;/a&gt;账号&lt;/li&gt;
&lt;li&gt;安装了代码编辑器（我使用的是 &lt;a href=&#34;https://code.visualstudio.com/&#34;   target=&#34;_blank&#34;&gt;
    VS Code&lt;/a&gt;）&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;div id=&#34;2-安装-hugo&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;2. 安装 Hugo 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#2-%e5%ae%89%e8%a3%85-hugo&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;根据官方文档安装&lt;a href=&#34;https://gohugo.io/getting-started/installing/&#34;   target=&#34;_blank&#34;&gt;
    Hugo 文档：Install Hugo&lt;/a&gt;。我是Mac系统，通过Mac的包管理工具进行安装。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;brew install hugo
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;查看 Hugo 是否安装成功，显示 Hugo 版本号代表 Hugo 安装成功。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo version
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo v0.120.4-f11bca5fec2ebb3a02727fb2a5cfb08da96fd9df+extended darwin/amd64 &lt;span class=&#34;nv&#34;&gt;BuildDate&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;2023-11-08T11:18:07Z &lt;span class=&#34;nv&#34;&gt;VendorInfo&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;brew
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;我安装的是最新v0.120版本。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;div id=&#34;3-创建-github仓库&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;3. 创建 Github仓库 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#3-%e5%88%9b%e5%bb%ba-github%e4%bb%93%e5%ba%93&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;进入&lt;a href=&#34;https://github.com/new&#34;   target=&#34;_blank&#34;&gt;
    Github 仓库创建页&lt;/a&gt;, 创建上述两个仓库&lt;/p&gt;
&lt;div id=&#34;31-博客源码仓库&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;3.1 博客源码仓库 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#31-%e5%8d%9a%e5%ae%a2%e6%ba%90%e7%a0%81%e4%bb%93%e5%ba%93&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/how_build_blog/blog-source.png&#34;
        alt=&#34;博客源码仓库&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;div id=&#34;32-github-pages-仓库&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;3.2 GitHub Pages 仓库 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#32-github-pages-%e4%bb%93%e5%ba%93&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;命名 &lt;strong&gt;GitHub Pages&lt;/strong&gt; 仓库，这个仓库必须使用特殊的命名格式 &lt;code&gt;&amp;lt;username.github.io&amp;gt;&lt;/code&gt;， &lt;code&gt;&amp;lt;username&amp;gt;&lt;/code&gt; 是自己的 GitHub 的用户名。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/how_build_blog/github-page.png&#34;
        alt=&#34;GitHub Pages 仓库&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;div id=&#34;4-本地克隆项目&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;4. 本地克隆项目 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#4-%e6%9c%ac%e5%9c%b0%e5%85%8b%e9%9a%86%e9%a1%b9%e7%9b%ae&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;按照&lt;a href=&#34;https://docs.github.com/zh/repositories/creating-and-managing-repositories/cloning-a-repository&#34;   target=&#34;_blank&#34;&gt;
    GitHub文档说明&lt;/a&gt;将这两个项目&lt;code&gt;clone&lt;/code&gt;到本地。&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/how_build_blog/clone.png&#34;
        alt=&#34;clone&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;hr&gt;
&lt;div id=&#34;5-使用-hugo-搭建博客&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;5. 使用 Hugo 搭建博客 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#5-%e4%bd%bf%e7%94%a8-hugo-%e6%90%ad%e5%bb%ba%e5%8d%9a%e5%ae%a2&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;进入刚刚克隆好的&lt;strong&gt;博客源码仓库&lt;/strong&gt;文件夹，通过Hugo来创建文件。&lt;/li&gt;
&lt;li&gt;用 Hugo 创建网站文件夹的命令是 &lt;code&gt;hugo new site 网站名字&lt;/code&gt;。(比如，我的命名是 &lt;code&gt;vastzh-blog&lt;/code&gt;)&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/how_build_blog/new.png&#34;
        alt=&#34;new&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;ol start=&#34;3&#34;&gt;
&lt;li&gt;我们&lt;code&gt;cd vastzh-blog&lt;/code&gt;, 使用来看下目录结构。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;$ tree                                                                                                          
.
├── archetypes             // 存放用 hugo 命令新建的 Markdown 文件应用的 front matter 模版
│   └── default.md
├── assets                 // 存放所有静态文件，如图片
├── content                // 存放内容页面，比如「博客」、「读书笔记」等
├── data                   // 存放创建站点时 Hugo 使用的其他数据
├── hugo.toml              // 网站配置文件
├── i18n                   // 多语言配置
├── layouts                // 存放定义网站的样式
├── static                 // 存放其他静态资源
└── themes                 // 存放主题文件
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;div id=&#34;6-使用-hugo-主题&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;6. 使用 Hugo 主题 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#6-%e4%bd%bf%e7%94%a8-hugo-%e4%b8%bb%e9%a2%98&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;可以从 &lt;a href=&#34;https://themes.gohugo.io/&#34;   target=&#34;_blank&#34;&gt;
    Hugo 社区提供的主题&lt;/a&gt;中选择一个喜欢的主题应用在自己的网站中。&lt;/p&gt;
&lt;div id=&#34;61-安装主题&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;6.1 安装主题 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#61-%e5%ae%89%e8%a3%85%e4%b8%bb%e9%a2%98&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;一般在你选择的 Hugo 主题的文档中，都会给出「如何安装这个主题」的命令，比如我选用的 &lt;strong&gt;Blowfish&lt;/strong&gt; 的文档中给出：





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/how_build_blog/install-hugo-theme-command.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;div id=&#34;62-配置主题&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;6.2 配置主题 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#62-%e9%85%8d%e7%bd%ae%e4%b8%bb%e9%a2%98&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;一般安装的 Hugo 主题的文件结构中都会有 &lt;code&gt;exampleSite&lt;/code&gt; 文件夹，也是你在选择主题时参考的网站 demo。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;把 &lt;code&gt;exampleSite&lt;/code&gt; 的文件复制到站点根目录，在此基础上进行基础配置&lt;/strong&gt;。
非常推荐这么做，这样做能解决很多「为什么明明跟教程一步一步做下来，显示的结果却不一样？」的疑惑。（这主要是因为不同的主题模版配置文件不同导致的。）&lt;/li&gt;
&lt;li&gt;在把&lt;code&gt;exampleSite&lt;/code&gt;文件复制到站点目录时，请根据&lt;strong&gt;对应&lt;/strong&gt;文件夹进行复制文件
&lt;ul&gt;
&lt;li&gt;比如&lt;code&gt;exampleSite&lt;/code&gt;下有 &lt;code&gt;content&lt;/code&gt;  和  &lt;code&gt;config&lt;/code&gt; 2 个文件，就找到你自己的站点跟目录下这对应的两个文件。在把对应目录中的内容分别复制过去。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;其中在复制&lt;code&gt;config.toml&lt;/code&gt;的内容时要注意：
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;baseURL&lt;/strong&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;baseURL&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;https://example.com/&amp;#34;&lt;/span&gt; &lt;span class=&#34;c1&#34;&gt;#把https://example.com/改成自己的域名&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;如果你没有在 GitHub Pages 中设置自定义域名，这里的域名应该填 &lt;code&gt;https://&amp;lt;username&amp;gt;.github.io/&lt;/code&gt; （⚠️ 注意：最后的&lt;code&gt;/&lt;/code&gt;不要忘了加）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;themes&lt;/strong&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;themes&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;你选择的主题名字&amp;#34;&lt;/span&gt;。 &lt;span class=&#34;c1&#34;&gt;#这一行命令代表启用你安装的主题&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;在 &lt;code&gt;config.toml&lt;/code&gt; 中输入这行命令才能启用安装的主题，不过一般这行命令在你复制 &lt;code&gt;exampleSite&lt;/code&gt; 的配置文件信息时，主题作者已经写好了这行。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;div id=&#34;63-创建文章&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;6.3 创建文章 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#63-%e5%88%9b%e5%bb%ba%e6%96%87%e7%ab%a0&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;ol&gt;
&lt;li&gt;在&lt;code&gt;menus.tomml&lt;/code&gt;中保留/创建需要的菜单栏。
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[[&lt;/span&gt;main&lt;span class=&#34;o&#34;&gt;]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;博客&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;pageRef&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;blog&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;weight&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;20&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;o&#34;&gt;[[&lt;/span&gt;main&lt;span class=&#34;o&#34;&gt;]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;name&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;标签&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;pageRef&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;tags&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nv&#34;&gt;weight&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;m&#34;&gt;30&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;# [[main]]&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#   name = &amp;#34;关于&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#   pageRef = &amp;#34;about&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;c1&#34;&gt;#   weight = 30&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;使用创建文章命令，把文章放入指定位置，我这里是&lt;code&gt;blog&lt;/code&gt;菜单。
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo new blog/test/index.md                                                                            
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;Content &lt;span class=&#34;s2&#34;&gt;&amp;#34;/Users/workspace/myblog/vastzh/vastzh-blog/content/blog/test/index.md&amp;#34;&lt;/span&gt; created
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;用这个命令创建的 Markdown 文件会套用 archetypes 文件夹中的 front matter 模版，在空白处用 Markdown 写入内容。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/how_build_blog/create_blog.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;div id=&#34;7-本地调试和预览&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;7. 本地调试和预览 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#7-%e6%9c%ac%e5%9c%b0%e8%b0%83%e8%af%95%e5%92%8c%e9%a2%84%e8%a7%88&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;在发布到网站前可以在本地预览网站或内容的效果，运行命令：
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;hugo server
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/how_build_blog/server.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/li&gt;
&lt;li&gt;在本地编辑 Markdown 文件时，通过 &lt;code&gt;hugo server&lt;/code&gt; 来实时预览显示效果。&lt;/li&gt;
&lt;li&gt;&lt;code&gt;hugo server&lt;/code&gt;  运行成功后，可以在 &lt;code&gt;http://localhost:1313/&lt;/code&gt; 中预览网站





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/how_build_blog/server-preview1.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  






  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/how_build_blog/server-preview2.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;div id=&#34;8-发布&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;8. 发布 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#8-%e5%8f%91%e5%b8%83&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;到目前所谓的工作都是在&lt;strong&gt;博客源码仓库&lt;/strong&gt;的本地源代码中进行的。当我们需要发布的时候，在根目录运行：&lt;/li&gt;
&lt;/ol&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;$ hugo                                                                                           
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;此时会默认在 &lt;code&gt;public&lt;/code&gt; 目录下生成博客所有的静态 Html 文件，&lt;code&gt;public&lt;/code&gt; 文件夹将指向 &lt;strong&gt;GitHub Pages&lt;/strong&gt; 仓库。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/how_build_blog/pushlish.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;ol start=&#34;2&#34;&gt;
&lt;li&gt;
&lt;p&gt;将  &lt;code&gt;public&lt;/code&gt;  文件夹初始化为 Git 仓库，并设置默认主分支名为  &lt;code&gt;main&lt;/code&gt;。这么做的原因是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GitHub 创建仓库时生成的默认主分支名是 &lt;code&gt;main&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;用 &lt;code&gt;git init&lt;/code&gt; 初始化 Git 仓库时创建的默认主分支名是 &lt;code&gt;master&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;将 &lt;code&gt;git init&lt;/code&gt; 创建的 &lt;code&gt;master&lt;/code&gt; 修改成 &lt;code&gt;main&lt;/code&gt; ，再推送给远端仓库 &lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt; ，这样才不会报错。&lt;/li&gt;
&lt;/ul&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;&lt;span class=&#34;nb&#34;&gt;cd&lt;/span&gt; public
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git init -b main
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;将 &lt;code&gt;public&lt;/code&gt;  文件夹关联远程 GitHub Pages 仓库，使用 GitHub Pages 仓库的 SSH 链接。

  



&lt;div
  
    class=&#34;flex px-4 py-3 rounded-md bg-primary-100 dark:bg-primary-900&#34;
  &gt;

  &lt;span
    
      class=&#34;text-primary-400 ltr:pr-3 rtl:pl-3 flex items-center&#34;
    &gt;

    

  &lt;span class=&#34;relative block icon&#34;&gt;
    &lt;svg xmlns=&#34;http://www.w3.org/2000/svg&#34; viewBox=&#34;0 0 512 512&#34;&gt;&lt;path fill=&#34;currentColor&#34; d=&#34;M506.3 417l-213.3-364c-16.33-28-57.54-28-73.98 0l-213.2 364C-10.59 444.9 9.849 480 42.74 480h426.6C502.1 480 522.6 445 506.3 417zM232 168c0-13.25 10.75-24 24-24S280 154.8 280 168v128c0 13.25-10.75 24-23.1 24S232 309.3 232 296V168zM256 416c-17.36 0-31.44-14.08-31.44-31.44c0-17.36 14.07-31.44 31.44-31.44s31.44 14.08 31.44 31.44C287.4 401.9 273.4 416 256 416z&#34;/&gt;&lt;/svg&gt;

  &lt;/span&gt;


  &lt;/span&gt;

  &lt;span
    
      class=&#34;dark:text-neutral-300&#34;
    &gt;要让 SSH 链接起作用，需要你添加过 SSH Key。如果你没有设置过 SSH Key，请参考&lt;a href=&#34;https://vastzh.com/blog/how-to-add-ssh-key-to-github-on-mac/&#34;  &gt;
    如何在 Mac 上为 GitHub 设置 SSH Key&lt;/a&gt;）&lt;/span&gt;
&lt;/div&gt;
&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git remote add origin git@github.com:&amp;lt;username&amp;gt;/&amp;lt;username&amp;gt;.github.io.git
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;推送 &lt;code&gt;public&lt;/code&gt; 文件夹到远程 &lt;strong&gt;GitHub Pages 仓库&lt;/strong&gt; 中，在推送仓库内容前要先用 &lt;code&gt;git pull --rebase origin main&lt;/code&gt; 和远端仓库同步，否则会报错。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre tabindex=&#34;0&#34; class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git pull --rebase origin main
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git add .
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git commit -m &lt;span class=&#34;s2&#34;&gt;&amp;#34;...(修改的信息)&amp;#34;&lt;/span&gt;
&lt;/span&gt;&lt;/span&gt;&lt;span class=&#34;line&#34;&gt;&lt;span class=&#34;cl&#34;&gt;git push origin main
&lt;/span&gt;&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;看下远程仓库的内容





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/how_build_blog/remote_code.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;代码上传成功后，通过 &lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt; 域名就可以访问 Hugo 搭建的博客了。
由于篇幅原因，我会把以下内容放在其他文章中介绍。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;如何使用自定义域名，使用cloudfare保护加速网页&lt;/li&gt;
&lt;li&gt;如何使用Firebase对博客进行浏览量点赞统计&lt;/li&gt;
&lt;li&gt;如何使用评论系统&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;hr&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/img/wc-search.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>聊聊我如何一个月把抖音小红书粉丝累积到3万的“反面教材”</title>
      <link>https://vastzh.com/blog/self_media/</link>
      <pubDate>Mon, 27 Nov 2023 15:22:12 +0800</pubDate>
      
      <guid>https://vastzh.com/blog/self_media/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;作为一个有大把时间折腾的人，除了折腾开发APP外，有时也会思考其他赚钱的方法，或许将来也能给自己多一份收入。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;前段时间，我花了些一个多月的时间实践如何做原创短视频，并把抖音和小红书的粉丝积攒到3W，也算起号成功。还经常有粉丝在后台问我收不收徒。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;你应该不会想到，明明起号成功了，我却不想再维护这个账号了。能申明的是，制作的每一个视频没有任何违规或不合法，只是单纯的不想运营下去了。在接下来的文章中我会分享是怎么起号成功，以及为什么不想再维护了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;如果你对我的自媒体短视频账号有兴趣，可以在公众号回复「自媒体」即可看到我的账号。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;小红书





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/self_media/WechatIMG668.jpg&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;抖音





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/self_media/WechatIMG669.jpg&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;如果你和我一样想做自媒体，如做了一段时间却粉丝数不理想，或者有想法但还没开始执行的。希望通过我的复盘，能对你有所启发。&lt;/strong&gt;&lt;br&gt;&lt;/p&gt;
&lt;div id=&#34;背景&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;背景 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e8%83%8c%e6%99%af&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;在过去几个月，&lt;strong&gt;ChatGPT&lt;/strong&gt;横空出世。当时我关注了很多AI领域相关的博主。每天都是&lt;strong&gt;Prompt&lt;/strong&gt;，&lt;strong&gt;Stable Diffuison&lt;/strong&gt;，&lt;strong&gt;Midjounry&lt;/strong&gt;，&lt;strong&gt;AIGC&lt;/strong&gt;，各种大语言模型，AI新工具的信息。
&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;当时最大的感触是 —— 每个人都是&lt;strong&gt;超级个体&lt;/strong&gt;的时代已经来了（其实还没完全到来。。）
&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;那会我就想通过&lt;strong&gt;AIGC&lt;/strong&gt;来做短视频。把自身的弱项交给AI去完成。通过AI来生成文案。再通过文案生成视频，就是“&lt;strong&gt;图文成片&lt;/strong&gt;”的方式来制作。&lt;/p&gt;
&lt;div id=&#34;调研&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;调研 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e8%b0%83%e7%a0%94&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;刚好在抖音刷到一个叫「&lt;strong&gt;不略&lt;/strong&gt;」的博主非常火，他做的书单号。以三分钟读一本书的形式，加上卡通的图文讲解，介绍每本书。当时看到他分享的《&lt;strong&gt;纳瓦尔宝典&lt;/strong&gt;》视频让我很有感触。。
&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;我尝试让chatGPT去解读《纳瓦尔宝典》这本书。输入适当的prompt。确实得到有关：“三分钟读一本书，今天我们分享《纳瓦尔宝典》。。”这样的文案内容。但是相较于博主不略的文案，&lt;strong&gt;AI生成的太过生硬，文案用词也太多呆板&lt;/strong&gt;。
&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;有关&lt;strong&gt;TTS(文字转语音)&lt;/strong&gt;，那会也恶趣味的用&lt;strong&gt;不略&lt;/strong&gt;的声音，周杰伦的声音，去做训练，效果不是很满意。并且可能有法律责任就放弃了。不过也找到不错的现成的产品。
&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;市面上的&lt;strong&gt;图文成片&lt;/strong&gt;，最好的或许就是&lt;strong&gt;剪映&lt;/strong&gt;自带的，但效果不能让我满意，感觉这样的视频很难火起来。
&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;短视频做的好不好很重要的一个因素是有没有&lt;strong&gt;视觉冲击&lt;/strong&gt;，抓住用户的眼球。对于书单号来说，当视频里说到某些知识点的时候，需要在视频里即时的出现对应的内容支撑与之呼应，这其实也是一种反馈机制。这样用户才更愿意看下去不划走。&lt;/p&gt;
&lt;p&gt;可能因为有一些强迫症，我不愿意完全为了节省时间而牺牲视频质量。最后我选择以一种白板动画的形式去做好视频。调研了如Videoscribe、Doodly、万彩等等，最后我选择了Videoscribe，效果如下：





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/self_media/explainer-video-animation-2.gif&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;所以现在我的视频制作流程变成：&lt;br&gt;
&lt;strong&gt;选一本书 -&amp;gt; 让chatgpt生成文案 -&amp;gt; 通过tts生成音频 -&amp;gt; 在Videoscribe导入音频做动画脚本 -&amp;gt; 校对音频和动画的帧 -&amp;gt; 导入剪映生成字幕 -&amp;gt; 发布各大平台&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;上面说的过程做了一些简化。&lt;/p&gt;
&lt;div id=&#34;涨粉&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;涨粉 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e6%b6%a8%e7%b2%89&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;div id=&#34;发布周期&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;发布周期 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e5%8f%91%e5%b8%83%e5%91%a8%e6%9c%9f&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;说到涨粉问题，有一个前提，就是要&lt;strong&gt;坚持不懈&lt;/strong&gt;的发视频。如果你是三分钟热度那想做好短视频几乎不可能。&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;特别是刚开始，要知道 &lt;u&gt;当用户在关注一个博主前，大概率会点进你的头像，看你的一些信息，例如你有多少粉丝，你有多少个作品，你的自我介绍等等，前提尽快把作品数量堆满9个以上，因为一屏是可以展示9个作品，超过一屏显的作品也会比较多一些。&lt;/u&gt;
&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;你可以设定一个周期，例如：每天的下午17点发，或者每周一三五，不要三天打鱼两天晒网。
&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;发视频的频率我建议根据制作&lt;strong&gt;视频的难度&lt;/strong&gt;。如果你是记录健身，并且你每天都这么做，那每天发就行。如果你和我一样，做一个视频要花几个小时。那就根据自己的情况而定。&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;我是每周一三五发视频，发的时间可以是下班高峰，晚饭后的一个时间段。我认为具体可以根据你的目标用户的一个作息时间来定。&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;div id=&#34;制作合集&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;制作合集 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e5%88%b6%e4%bd%9c%e5%90%88%e9%9b%86&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;建议做的视频，根据细分门类放到不同的合集里。这样当用户看完一个视频，有一定概率可以通过合集继续看你的视频。&lt;/p&gt;
&lt;div id=&#34;发布&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;发布 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e5%8f%91%e5%b8%83&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;建议使用网页版的抖音来发布作品。





  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/self_media/1701089144973.jpg&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  


因为对视频有更好的能力加持，例如：章节（对视频内容增加锚点）、标签（类似于seo提升排名），关联热点等等。&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;div id=&#34;视频长度&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;视频长度 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e8%a7%86%e9%a2%91%e9%95%bf%e5%ba%a6&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;建议视频长度不要太长，控制在&lt;strong&gt;1分钟左右&lt;/strong&gt;。因为如果视频太长，就会影响你的&lt;strong&gt;完播率&lt;/strong&gt;。&lt;u&gt;在这个浮躁的世界，很少有人静下心来看完整个视频。即使你的视频做的很棒。但比较是短视频平台，做的太长没有任何意义。&lt;/u&gt;这也是我不想运营我的账号原因之一。&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;div id=&#34;追热点&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;追热点 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e8%bf%bd%e7%83%ad%e7%82%b9&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;网上有很多追踪热点视频的方法，我们可以追踪相同领域的爆款视频。不要怕模仿，如果没有好的素材就可以去模仿别人的爆款，我们开始最需要的就是流量，有了流量才有涨粉的机会，粉丝多了流量才会越来越多。&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;div id=&#34;推广&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;推广 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e6%8e%a8%e5%b9%bf&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;当你的视频数量达到10个以上。同时我们在后台&lt;strong&gt;数据中心&lt;/strong&gt;，关注有数据不错的视频作品。这时候可以适当的使用&lt;strong&gt;抖加&lt;/strong&gt;。&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;抖加&lt;/strong&gt;相当于是一个&lt;strong&gt;流量放大器&lt;/strong&gt;，也是抖音赚钱的重要手段。&lt;u&gt;可以观察一些刚刚起号成功的账号（1～10w）粉丝的账号。你会发现，这些账号一般都是靠着特别的视频火起来的，并不是说每个视频的播放量都很平均，一定是有几个播放量特别高的视频。&lt;/u&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;前期堆热门视频，蹭热点视频。把账号视频做到起码10个以上。然后观察播放量比较高的视频，以及每个视频的指标，如：&lt;strong&gt;5秒完播率，3秒退出率&lt;/strong&gt;等等。再测试最低价位推广来看效果，效果好则可以反复推广几次。目的是为了撬动下一层的流量池。&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;我就是一个例子，其实能累积到3万的粉丝，主要也是靠几个视频。经过测试推广了这些效果比较好的视频。连续投了几次100元的抖加。&lt;u&gt;一般来说投一次抖加我可以获得100～200个精准粉丝，1000～2000的播放量。但也有可能获得几十万的播放量甚至更多。我当时就是在一次推广时视频的播放量达到了50万。原因是进入了下一层的流量池，自然就获得了大量的流量。在网上可以找到流量池的图表这里就不再展示了。&lt;/u&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;总之&lt;strong&gt;以少量推广去撬动巨大流量&lt;/strong&gt;是快速起号的一个重要手段。&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;div id=&#34;视频门类&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;视频门类 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e8%a7%86%e9%a2%91%e9%97%a8%e7%b1%bb&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;我们在发视频时，需要抓住一个特定的领域。切记不要什么类型的视频都去拍。要知道，如果你什么都想做，就可能什么也做不好。拿抖音举例，每个账号都有自己的标签，比如做科普的，健身的，vlog，解说类的等等等。&lt;u&gt;如果你什么类型都做，抖音就没办法给你打标签，也没办法把你的视频推送给目标用户，自然刷到你的视频也大概率不喜欢了。&lt;/u&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;我们可以做一些泛垂直的尝试。比如，你是健身的也可以发跑步的，打球的。同样的，我做的书单视频，从事也会拍心理学的，认知类的内容。只要输出的形式不变还是可以抓住用户。&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;div id=&#34;不同平台&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;不同平台 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e4%b8%8d%e5%90%8c%e5%b9%b3%e5%8f%b0&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;现在各个平台都在占领市场，比如抖音也开始做类似小红书的图文笔记。小红书也做起来短视频以及电商。既然，我们创作了内容，内容就可以在不同的平台发布。来增加我们的曝光率。因为每个用户一天就这么多时间，他花了一个小时刷抖音，同样的他就少了一个小时时间看小红书。&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;同样的短视频平台都已经达到了饱和，谁的视频能抓人眼球，平台给的流量就多。我们可以尽量在平台尝试新玩法的时候较早的涉入其中因为这些时候都有流量扶持。不要等饱和了再去尝试那样就晚了。&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;div id=&#34;不再维护&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;不再维护 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e4%b8%8d%e5%86%8d%e7%bb%b4%e6%8a%a4&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;一开始我说过，不再维护我的短视频账号。有一个很重要的原因：我当时选错了领域。其实我并不适合做书单和认知类的视频。因为我看书不多，这不是我擅长的事，每天做的都很难，当没有足够的正反馈，也不能赚钱时，往往就需要为爱发电，没有兴趣就会很煎熬。&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;做书单号我的初衷是大量依靠AI的力量，但经过实践，无论是AI的文案能力，还是做视频能力，或者是TTS都没有达到我想要的水准。于是有大量的工作，还是靠我自己手动完成。有时做一个视频，从选题到查阅资料写文案再到做动画，往往可能会花3-4小时。&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;div id=&#34;写在最后&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;写在最后 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e5%86%99%e5%9c%a8%e6%9c%80%e5%90%8e&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;虽然视频起号成功了，没有再维护下去让我很遗憾，都是也放松了许多。如果你看到这里，那么我最想告诉你，做自媒体，最好是找自己喜欢感兴趣的领域。这样才能长期以往的坚持下去。无论有没有粉丝，都可以为爱发电！就像此时开始练习写文章的我一样。&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;如果你对我的自媒体短视频账号有兴趣，可以在公众号回复「自媒体」即可看到我的账号。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/img/wc-search.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>出海日记——单机版应用如何做数据同步</title>
      <link>https://vastzh.com/blog/local_sync/</link>
      <pubDate>Tue, 21 Nov 2023 16:22:12 +0800</pubDate>
      
      <guid>https://vastzh.com/blog/local_sync/</guid>
      <description>&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/local_sync/sync.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;br&gt;
如果你是刚入门  &lt;strong&gt;独立开发&lt;/strong&gt;  ，你可能有过这样的思考，我做的APP会不会有人用？  刚开始会不会有盈利？  有没有必要把数据保存在服务端？&lt;br&gt;
&lt;br&gt;
其实在一切条件都允许的情况，我认为一个应用必然  &lt;strong&gt;要有一个服务器&lt;/strong&gt;的，有了服务器，用户的数据更安全不会因为更新卸载应用而导致数据丢失，同时也方便开发者通过观察用户数据去更新和迭代应用。也能更好的对应用进行控制，如权限，公告，内购的折扣等等。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;当然，服务器也会带来很多&lt;strong&gt;额外的成本&lt;/strong&gt;，比如运维，安全，服务器费用，接口开发等等。你需要考虑服务器的配置，一般双11各大云厂商都有2~5折优惠，但是&lt;strong&gt;续费&lt;/strong&gt;时吓死人，同时你可能也要考虑避免服务器被攻击等问题。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;以我个人为例，开发了10来个工具类的应用。有时候为了更好的增加用户粘性，也会增加像打卡签到，用户日常数据的记录。有趣的是，我的这些应用都没有接服务器，原因就像上面所说。刚开始我更希望的是，APP开发完成了，就&lt;strong&gt;不再需要额外的维护成本&lt;/strong&gt;，除非我想加新的功能。这样我才有更多时间去专注下一个APP，  虽然干了9年后端，前期还是不想有额外的负担。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;进入正题，如果你和我想法一样，那么单机版应用要如何做数据同步？答案是，做云同步或者说类似于用用户自己的网盘去同步。接下来说一下我的&lt;br&gt;
&lt;strong&gt;Flutter方案&lt;/strong&gt;。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;目前我的APP都发布在  &lt;strong&gt;Google Play&lt;/strong&gt;，所以这里也是举例海外的一套方案，你完全可以照葫芦画瓢开发一套适应国内的方案。不过我建议如果你想针对你的某个APP发力做精品还是接个服务器会比较好。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Google  OAuth + Drive&lt;/strong&gt;这是一套谷歌方案，你可能常常看到国外的APP上看到同步的功能，一般先登录谷歌账号，之后定期自动同步。虽然不清楚老外怎么实现的，用没用上服务器。但是我自己摸索的这套方案，也能做到同样的效果，也不需要维护服务器。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;可能有人会有疑问，Drive只是一个网盘怎么备份应用的数据。其实方法也不难，一般工具类APP，即使记录了一年的用户数据，数据量也是非常小的。可以写一个工具类把数据转成json存储到文件里，再写个方法把json解析成数据对象回写到你的存储引擎。或者更省事，你可以使用&lt;strong&gt;sqlite&lt;/strong&gt;，直接把整个sql文件给上传了。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;div id=&#34;步骤&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;步骤 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e6%ad%a5%e9%aa%a4&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;p&gt;打开  &lt;strong&gt;Google Cloud Platform API manager&lt;/strong&gt; [https://console.cloud.google.com/apis/dashboard]，点击启用API和服务&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/local_sync/8b1bddb0d675fed1c4277d608808b9ec.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;搜索drive关键期，选择Google Drive API添加&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/local_sync/ba056a9dfc6439867397fdfc7a23e271.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;添加API凭据，这里我是通过&lt;br&gt;
&lt;strong&gt;Firebase&lt;/strong&gt;自动生成。&lt;/p&gt;
&lt;p&gt;所以也可以去&lt;br&gt;
&lt;strong&gt;Firebase&lt;/strong&gt;中创建项目（之后我会写篇Firebase如何创建项目的文章）&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/local_sync/b76c4a5d42c4fec09eccea3204669e3b.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;创建完项目和应用后，需要在Authentication模块中加入登入验证方式。&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/local_sync/004d79734dda2917deeb4c846b7073dc.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;要求填入Oauth客户端ID&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/local_sync/29cbaafaffadc6a41ac6b06fba941d27.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;这是可以返回刚才Google Cloud Platform API manager [https://console.cloud.google.com/apis/dashboard]，已经自动创建的Oauth客户端信息复制ID和密钥。&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/local_sync/dc18d14a6e273b625d7d900bc931a1fd.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;到这，配置就差不多了，来看下主要代码&lt;/p&gt;
&lt;p&gt;在pubspec.yaml中添加依赖：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  google_sign_in: ^6.1.4
  googleapis: ^11.2.0
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;创建用来登录的变量&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  import &amp;#39;package:googleapis/drive/v3.dart&amp;#39; as drive;
  import &amp;#39;package:google_sign_in/google_sign_in.dart&amp;#39;;
  
  GoogleSignInAccount? account;
  ...
  // 调用此方法可以让APP出现登入弹窗
  account = await GoogleSignIn.standard(scopes: [drive.DriveApi.driveScope])
          .signIn();
          
  // 注销登入  
  await GoogleSignIn.standard(scopes: [
                                drive.DriveApi.driveScope
                                    ]).signOut();      
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;根据自己的业务逻辑使用登入登出功能。&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/local_sync/beb972b89ca12cc63a94404659035286.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;到这里我们拿到了用于调用drive接口所需的验签。&lt;/p&gt;
&lt;p&gt;再来看一下drive上传和下载的方法。&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;import &amp;#39;package:googleapis/drive/v3.dart&amp;#39; as drive;


 // 获取driveApiClient
 final driveApi =
          drive.DriveApi(GoogleAuthClient(await account!.authHeaders));
 
 
 // 上传db文件
 final dbMedia =
    drive.Media(File(dbPath).openRead(), File(dbPath).lengthSync());
 final file = drive.File()
   ..name = dbPath.split(&amp;#39;/&amp;#39;).last
   ..parents = [parentFolderId]
   ..description = dbVersion.toString(); 
 await driveApi.files.create(file, uploadMedia: dbMedia);

 // 下载本地更新
 final dbMedia = await driveApi.files.get(dbFileId,
              downloadOptions: drive.DownloadOptions.fullMedia) as drive.Media;
  List&amp;lt;int&amp;gt; contentBytes = [];
  await dbMedia.stream.listen((bytes) {
    contentBytes.addAll(bytes);
  }).asFuture();
  await File(dbPath).writeAsBytes(contentBytes, flush: true);
  Logger().i(&amp;#39;本地更新&amp;#39;);
 
 
          
 // 封装一个带验签的http client
 class GoogleAuthClient extends BaseClient {
  final Map&amp;lt;String, String&amp;gt; headers;
  final Client client = Client();

  GoogleAuthClient(this.headers);

  @override
  Future&amp;lt;StreamedResponse&amp;gt; send(BaseRequest request) {
    return client.send(request..headers.addAll(headers));
  }
}         
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;这里只演示如何上传和下载，同步逻辑请根据自身需要来实现。&lt;/p&gt;
&lt;p&gt;如果你是&lt;br&gt;
&lt;strong&gt;安卓开发&lt;/strong&gt;，那么需要使用Android对应的SDK即可，配置应该都是一样的。&lt;/p&gt;
&lt;p&gt;强调一下，我在使用sqlite的时候，其实使用了&lt;strong&gt;多个db文件&lt;/strong&gt;。原因是我不希望所有的数据都需要同步。例如下次我们开发了一个新的功能，在数据库中增加了新字段B来控制或记录这个功能。这是如果用全套db同步的方案，B字段会因为同步而消失从而导致问题。&lt;/p&gt;
&lt;p&gt;不是所有的数据都需要同步备份，精简出业务所需的用户功能数据来进行备份，这样才能减少问题。&lt;strong&gt;所以具体怎么同步根据不同的需求去设计。&lt;/strong&gt;&lt;/p&gt;
&lt;div id=&#34;引用&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h2 class=&#34;relative group&#34;&gt;引用 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e5%bc%95%e7%94%a8&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h2&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;https://pub.dev/packages/google_sign_in
https://pub.dev/packages/googleapis
https://cloud.google.com/docs/authentication?hl=zh_CN&amp;amp;_ga=2.156109883.-1604196893.1667810752
https://firebase.google.com/docs/flutter/setup?hl=zh-cn&amp;amp;platform=android
&lt;/code&gt;&lt;/pre&gt;&lt;hr&gt;
&lt;!-- &lt;img src=&#34;../../../img/wc-search.png&#34; alt=&#34;公众号&#34; style=&#34;width:80%; display:block; margin:auto;&#34;&gt; --&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/img/wc-search.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>出海日记——Admob完成这个操作否则明年可能没有广告收入</title>
      <link>https://vastzh.com/blog/gdpr_message/</link>
      <pubDate>Wed, 15 Nov 2023 16:22:12 +0800</pubDate>
      
      <guid>https://vastzh.com/blog/gdpr_message/</guid>
      <description>&lt;p&gt;出海的第N天，打开手机想看下昨天Admob的广告收入，打开网页弹出了一个大大的框遮挡了一切，画风完全不同。&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/gdpr_message/e1b700e64936af3f230523186c9c9d77.jpeg&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;定眼一看&lt;/strong&gt;&lt;br&gt;
原来是要我&lt;strong&gt;创建GDPR用户意见征求&lt;/strong&gt;的消息。其实GDPR的提示框，在几个月前，就在电脑网页版的admob最上方显示。当时问了一些朋友，说是没什么影响&lt;br&gt;
可以放一放。毕竟要&lt;strong&gt;2024年1月16生效&lt;/strong&gt;  。&lt;/p&gt;
&lt;p&gt;以前手机访问没有这个框，直接看看收入就完事了。现在每次打开网页必须选择其中一项什么也看不到了，当时也不知道这些选项什么意思会不会踩坑，迫于无奈只能把GDPR这件事提前折腾了。&lt;/p&gt;
&lt;div id=&#34;什么是gdpr&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;什么是GDPR 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e4%bb%80%e4%b9%88%e6%98%afgdpr&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;blockquote&gt;
&lt;p&gt;2018 年 5 月 25 日生效的《通用数据保护条例》(GDPR) 是一项全面的数据隐私法律，为个人数据的收集、处理、存储和传输建立了一个框架。它要求以安全的方式处理所有个人数据，并包括对不遵守这些要求的企业的罚款和处罚。它还为个人提供了一些有关其个人数据的权利。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我的理解是个性化广告会通过Cookie收集用户的个人数据，在使用广告类SDK时，如Admob，也会收集用户的信息。在&lt;strong&gt;欧洲经济区和英国境内&lt;/strong&gt;&lt;br&gt;
的用户就需要向用户征求意见。&lt;/p&gt;
&lt;p&gt;创建GDPR消息，也就是在APP打开时弹出对话框，告知用户APP的隐私政策以及应用中的个性化广告会获取用户数据，用户可以选择同意或不同意。&lt;/p&gt;
&lt;div id=&#34;具体步骤&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;具体步骤 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e5%85%b7%e4%bd%93%e6%ad%a5%e9%aa%a4&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;1.点击&lt;strong&gt;开始&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/gdpr_message/e2b885f4388b83c32bafaa6029582c49.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;2.选择要&lt;strong&gt;创建GDPR消息&lt;/strong&gt;的应用，并设置&lt;strong&gt;用户选项&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/gdpr_message/dcd70a8e84445b667617bd33026c7e29.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;3.设置&lt;strong&gt;隐私政策网址&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/gdpr_message/5594a1087b526d1fab24d71c31d3776c.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;4.在应用中设置&lt;strong&gt;GDPR消息弹出的代码&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;在代码最初的initState中加入代码：****&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt; final params = ConsentRequestParameters(
      consentDebugSettings: debugSettings,
    );
    ConsentInformation.instance.requestConsentInfoUpdate(
      params,
      () async {
        if (await ConsentInformation.instance.isConsentFormAvailable()) {
          loadForm();
        }
      },
      (FormError error) {
        // Handle the error
      },
    );
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;‍&lt;/p&gt;
&lt;p&gt;要呈现同意书，请使用类&lt;strong&gt;show()&lt;/strong&gt;&lt;br&gt;
上的方法&lt;strong&gt;ConsentForm&lt;/strong&gt;&lt;br&gt;
。&lt;br&gt;
必须在提交表格之前确定用户是否需要同意。要检查是否需要同意，请调用getConsentStatus()&lt;br&gt;
该 ConsentInformation&lt;br&gt;
对象，该对象返回类型为 的枚举ConsentStatus&lt;br&gt;
。有四个可能的值ConsentStatus&lt;br&gt;
：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;unknown&lt;/strong&gt;&lt;br&gt;
：未知的同意状态。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;required&lt;/strong&gt;&lt;br&gt;
：需要但尚未获得用户同意。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;notRequired&lt;/strong&gt;&lt;br&gt;
：不需要用户同意。例如，用户不在欧洲经济区或英国。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;&lt;strong&gt;obtained&lt;/strong&gt;&lt;br&gt;
：已获得用户同意。个性化未定义。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;loadForm&lt;br&gt;
像这样改变你的方法：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;  void loadForm() {
    ConsentForm.loadConsentForm(
      (ConsentForm consentForm) async {
        var status = await ConsentInformation.instance.getConsentStatus();
        // 在不同的状态下写各自的逻辑。
        if (status == ConsentStatus.required) {
          consentForm.show(
            (FormError? formError) {
              // 呈现同意书
              loadForm();
            },
          );
        } else if (status == ConsentStatus.obtained) {
            // 添加同意后的逻辑
        }
      },
      (formError) {
          // 错误处理
      },
    );
  }
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;5.本地调试&lt;/p&gt;
&lt;p&gt;如何你设置的GDPR消息只对欧盟地区弹出消息框，则可以&lt;strong&gt;强制地理&lt;/strong&gt;&lt;br&gt;
进行调试。&lt;/p&gt;
&lt;p&gt;增加如下代码：&lt;/p&gt;
&lt;pre tabindex=&#34;0&#34;&gt;&lt;code&gt;ConsentDebugSettings debugSettings = ConsentDebugSettings(
  debugGeography: DebugGeography.debugGeographyEea,
  testIdentifiers: [&amp;#39;TEST-DEVICE-HASHED-ID&amp;#39;]);

ConsentRequestParameters params = ConsentRequestParameters(
  consentDebugSettings: debugSettings);
  
// 省略后面内容
  ...
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;应用程序的调试设置中提供测试设备的哈希 ID 才能使用调试功能，用ID来代替&lt;strong&gt;TEST-DEVICE-HASHED-ID&lt;/strong&gt;&lt;br&gt;
内容。&lt;/p&gt;
&lt;p&gt;如果你之前的项目已经集成了Admob，则在调试运行的日志中&lt;strong&gt;搜索关键字&lt;/strong&gt;就可以看到&lt;strong&gt;测试设备的哈希 ID&lt;/strong&gt;&lt;br&gt;
。如下图：&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/gdpr_message/b501f534a30e0a581505cc70c0360c75.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;最后，热更新一下应用就可以呈现&lt;strong&gt;GDPR弹窗&lt;/strong&gt;了。&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/gdpr_message/bb61ccec215743bc2b246968927f7048.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;div id=&#34;最后附上参考资料&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;最后附上参考资料 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e6%9c%80%e5%90%8e%e9%99%84%e4%b8%8a%e5%8f%82%e8%80%83%e8%b5%84%e6%96%99&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;div id=&#34;创建gdpr消息文档地址如下&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h4 class=&#34;relative group&#34;&gt;创建GDPR消息文档地址如下： 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e5%88%9b%e5%bb%bagdpr%e6%b6%88%e6%81%af%e6%96%87%e6%a1%a3%e5%9c%b0%e5%9d%80%e5%a6%82%e4%b8%8b&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://support.google.com/admob/answer/10113207?hl=zh-Hans&amp;amp;ref_topic=10105230&amp;amp;sjid=1600386979072872981-AP&#34;   target=&#34;_blank&#34;&gt;
    https://support.google.com/admob/answer/10113207?hl=zh-Hans&amp;ref_topic=10105230&amp;sjid=1600386979072872981-AP&lt;/a&gt;&lt;/p&gt;
&lt;div id=&#34;flutter集成文档&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h4 class=&#34;relative group&#34;&gt;Flutter集成文档： 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#flutter%e9%9b%86%e6%88%90%e6%96%87%e6%a1%a3&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h4&gt;
&lt;p&gt;&lt;a href=&#34;https://developers.google.cn/admob/flutter/eu-consent?hl=zh-cn&#34;   target=&#34;_blank&#34;&gt;
    https://developers.google.cn/admob/flutter/eu-consent?hl=zh-cn&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/img/wc-search.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>出海日记——填写谷歌税务表单</title>
      <link>https://vastzh.com/blog/tax_form/</link>
      <pubDate>Thu, 19 Oct 2023 16:22:12 +0800</pubDate>
      
      <guid>https://vastzh.com/blog/tax_form/</guid>
      <description>&lt;p&gt;




  
  
  
    &lt;figure&gt;
      &lt;img class=&#34;my-0 rounded-md&#34; src=&#34;1ae416ec57d0a2b2f9c34719af8cf16e.jpeg&#34; alt=&#34;&#34; /&gt;
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;关于出海，这里说的出海是指发展海外业务，这里尤其指Google Play商店的APP开发上架及运营。&lt;/p&gt;
&lt;p&gt;我是一个程序员，裁员之后成了独立开发体验师，或者说是一个无业游民，想靠着仅有的写代码手艺干出一番事业。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;所以，我出海了。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;为什么选择出海，主要的原因是如果想在国内上架APP实在是阻碍太大了。比如要想上架到华为、小米等应用商城，需要的资质就不少。&lt;br&gt;
既要有营业执照，又要申请软著，现在又多了一个APP备案等等一系列的繁杂琐事。其中的坑还不少，每一个都可以单独领出来写一篇文章。&lt;/p&gt;
&lt;p&gt;网上的资料确实也比较少，我寻思着把这些坑写出来分享给每一个即将成功独立开发体验者的人，让大家少走弯路。&lt;/p&gt;
&lt;p&gt;当然，出海只是第一步，将来我也会进军国内市场，总要一步步来。接下来我们进入正题。&lt;/p&gt;
&lt;p&gt;当突然有一天，你的GooglePlay Console 打开后顶部出现这样的提示。&lt;br&gt;
那么恭喜你。你的第一位付费用户有了！&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/tax_form/1d2bb734b0c9486243a3803ca94c5e74.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;需要尽快的提交税务表单信息。这样用户给你的支付款才会再下个月进入你的银行账户。&lt;/p&gt;
&lt;p&gt;不用着急，其实填的内容并不复杂。只要照着我的步骤一步步填写即可。&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/tax_form/ae3f770ed96bb1a936b23626d428f864.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;我们以独立开发中为例，选择“个人”。&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/tax_form/4e350bcb9fff836d86356d9bcff2991d.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;根据字面意思，选择第一个。&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/tax_form/e6d5a28c15674355eb82b069483604ba.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;地址当时没有截图网上找了张图可以参考。&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/tax_form/8d95b5e846095f659bb15d360bba2edb.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;为了省事，我勾选了：邮寄地址与永久地址相同&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/tax_form/5f14bf17711794ebec7dfaa85a1a5a0f.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;您是否要依据税收条约申请降低预扣税率？这里我点是。&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/tax_form/fe37a9ecffe91ec4c37a582a3a722cc8.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/tax_form/b76fef77a2b039881a936fa19a011d5b.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/tax_form/4147fd9eb1833a02ed1cd71c107d724c.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/tax_form/e5b4205fa6e16e1114ed7f0156d8e7c4.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;照着填就完了。&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/tax_form/be4caff2b62abb791577bbcbb098c2c0.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/tax_form/1f2e97a2330898c2d3bbe44faa9a1597.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;到这里就设置完成了。&lt;/p&gt;
&lt;p&gt;最后附上我的第一个付费用户付费截图 。&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/tax_form/fd927b77d04f75393c743f535c877236.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/img/wc-search.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>想做独立开发赚钱的朋友，你想了解的都在这里</title>
      <link>https://vastzh.com/blog/you_want_know/</link>
      <pubDate>Wed, 11 Oct 2023 16:22:12 +0800</pubDate>
      
      <guid>https://vastzh.com/blog/you_want_know/</guid>
      <description>&lt;p&gt;最近一年多，迫于大环境的萧条。很多开发者都领了盒饭。想找一份稳定的工作，难度也越来越大。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;程序员是一个吃青春饭的工种。不久前我也领了盒饭，趁着这个时机我有了开发自己产品的想法，不再为别人打工。在一步步验证自己的想法的过程中也踩了不少坑，希望能用我遇到一些经验帮助和我有相同想法的朋友。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;今天简单的分享下目前自己做独立产品遇到的经验和想法。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;div id=&#34;一前提的准备&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;一、前提的准备 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e4%b8%80%e5%89%8d%e6%8f%90%e7%9a%84%e5%87%86%e5%a4%87&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;当有了做自己产品的想法时，&lt;strong&gt;建议尽早的去执行和验证你的想法&lt;/strong&gt;。验证这件事不一定要等你离职后。因为成功与否需要经受时间的考验，要不断优化迭代。&lt;/p&gt;
&lt;p&gt;很少有人可以一步登天。刚起步时，需要有用户的反馈，来慢慢优化产品，另外积累用户也需要一定的时间。所以有了想法和觉悟，在空余时间尽早的尝试吧。&lt;/p&gt;
&lt;div id=&#34;二学习一门前端语言&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;二、学习一门前端语言 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e4%ba%8c%e5%ad%a6%e4%b9%a0%e4%b8%80%e9%97%a8%e5%89%8d%e7%ab%af%e8%af%ad%e8%a8%80&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;做独立产品是后端的短板，需要尽早的学习一门前端编程语言，来丰富自己的技术栈。相信大部分后端开发者和我一样，平时主要的工作是设计数据库和写接口的业务逻辑。但不可否认的是，&lt;br&gt;
做独立开发者前端比后端更重要，你的界面是否好看，交互是否流畅，这都和前端息息相关。&lt;/p&gt;
&lt;p&gt;选一门生态好，易用，跨平台的前端语言。最好是适合自己的。比如有一些前端基础可以考虑学习vue react常见的语言。根据自己的情况选择。我选择了flutter，因为我没有前端基础，对我来说学习flutter学习成本比较低没有历史包袱，跨平台性也比较好，将来一套代码苹果安卓都可以用。&lt;/p&gt;
&lt;div id=&#34;三申请软著注册公司&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;三、申请软著注册公司 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e4%b8%89%e7%94%b3%e8%af%b7%e8%bd%af%e8%91%97%e6%b3%a8%e5%86%8c%e5%85%ac%e5%8f%b8&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;上架到国内的应用市场，目前国内流量最大的莫过于手机厂商自己摸应用市场。&lt;/p&gt;
&lt;p&gt;华为，小米，OPPO和vivo四个应用市场。但是他们都需要企业资质和软著。申请一个软著正常流程下来需要三个月时间。我之前在某宝找人代办申请三个软著等了三个月都失败了。现在自己重新还在申请中。建议有时间的还是自己去申请，其实不难，就是时间特别长，所以建议提早申请。&lt;br&gt;
注册公司虽然也比较麻烦但是用不了这么久半个月也就够了。&lt;/p&gt;
&lt;div id=&#34;四海外google-play和apple-store市场&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;四、海外Google Play和Apple Store市场 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e5%9b%9b%e6%b5%b7%e5%a4%96google-play%e5%92%8capple-store%e5%b8%82%e5%9c%ba&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;由于上述原因上架国内所花的时间会比较长，所以我们可以先申请需要的资质。当流程已经在走的时候，我们也不要闲着，可以先上架GooglePlay和苹果市场。&lt;/p&gt;
&lt;p&gt;GooglePlay 开发者账号是需要付费的25美金永久性账号。开通需要信用卡是visa卡或者master卡。银联卡无法支付，如果没有的话，可以办理一个。GooglePlay上架比较容易，曾经有小伙伴应用只有一个界面都上架成功了。不需要软著，个人和公司都可以。&lt;/p&gt;
&lt;p&gt;在海外市场同样可以验证产品的优劣。后期也可以加入广告和内购来获得收益。广告可以通过集成Admob收益比国内好很多。内购的话可以用iSDK库去集成。后期我会专门出一篇文章更详细的介绍。&lt;/p&gt;
&lt;p&gt;****当广告收入达到&lt;strong&gt;地址验证最低限额10美元&lt;/strong&gt;时，会向您的 AdSense 帐号中的收款人地址邮寄PIN码。耐心等待2-4周。当将收到的PIN码输入到 AdSense 帐号后，谷歌才会付款。&lt;br&gt;
内购和Admob一样，可以绑定国内普通银行卡，每个月18号会自动电汇到你的银行卡，满一刀起付。相比于国内特别简单，不管是内购接入还是广告接入方式。&lt;/p&gt;
&lt;p&gt;另外如果想上架App Store，成为开发者费用是每年99刀，也就是差不多700块钱。目前我只上架过两个产品，和GooglePlay 一样，也是非常适合上手的。广告接入也是使用的Admob，内购是使用苹果的支付SDK，好像是150刀起付，我在苹果上架比较晚，收入没达到要求，具体还不是很了解，等达到起付标准后再做分享。&lt;/p&gt;
&lt;div id=&#34;写在最后&#34; class=&#34;anchor&#34;&gt;&lt;/div&gt;
&lt;h3 class=&#34;relative group&#34;&gt;写在最后 
    &lt;span
        class=&#34;absolute top-0 w-6 transition-opacity opacity-0 ltr:-left-6 rtl:-right-6 not-prose group-hover:opacity-100&#34;&gt;
        &lt;a class=&#34;group-hover:text-primary-300 dark:group-hover:text-neutral-700&#34;
            style=&#34;text-decoration-line: none !important;&#34; href=&#34;#%e5%86%99%e5%9c%a8%e6%9c%80%e5%90%8e&#34; aria-label=&#34;锚点&#34;&gt;#&lt;/a&gt;&lt;/span&gt;        
    
&lt;/h3&gt;
&lt;p&gt;对于新手来说，很多人可能会觉得上架后没有人下载怎么办，其实我觉得没必要担心这个事。先把应用开发出来，应用没开发出来想这想哪是没用的。&lt;/p&gt;
&lt;p&gt;至少目前我上架的应用都有自然流量，无非是多与少的区别。做独立开发者想要赚钱，最重要的是你的执行力要强，想再多产品开发不出来都是没用的。等有了产品再慢慢优化。刚开始我们更需要的是从0到1开发一款产品到上架的知识和技能。&lt;/p&gt;
&lt;p&gt;一款好的产品从来都不是技术有多牛，而是解决用户的痛点。&lt;br&gt;
当你了解这些，这时你发现一个用户痛点时，想开发一款新的产品就容易的多。&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/img/wc-search.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>此夜无眠，聊聊为什么爱玩核桃</title>
      <link>https://vastzh.com/blog/hetao/</link>
      <pubDate>Sun, 01 Oct 2023 16:22:12 +0800</pubDate>
      
      <guid>https://vastzh.com/blog/hetao/</guid>
      <description>&lt;p&gt;




  
  
  
    &lt;figure&gt;
      &lt;img class=&#34;my-0 rounded-md&#34; src=&#34;44acdf0d01fa71726e6ac79cb4256e21.jpeg&#34; alt=&#34;&#34; /&gt;
      
    &lt;/figure&gt;
  

&lt;br&gt;
(图为我的小蛤蟆头手串，重新穿绳时拍的)
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;今天又又又失眠了，手里盘起核桃，索性聊聊我的这个爱好。
每当回首往昔，总觉得时间飞逝，度年如秒。不是错觉，记忆在脑海中可以任意的快进，倒退，只要是印象深刻的人和事，也容易单曲循环几遍。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;在这些零零碎碎时间的汇总里，总有人会问我，你手里那两个蛋是什么？这两个蛋有什么好玩的？&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/hetao/94539717cd441ee3672387026ffb49b2.jpeg&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;br&gt;
​&lt;/p&gt;
&lt;p&gt;说实话我也不知道。但如果你问我什么时候玩，我会告诉你，发呆的时候，想事儿的时候，心烦的时候，开心的时候，边走在路上口袋里，边揣着一个玩意儿。有时候吃饭，一只手空着照样玩。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;这样一算，好像一天中大部分时候我都在揉着两个蛋两个木头。除非太忙，双手都被占用，一只也腾不出来。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;所以文玩核桃，我到底在玩什么？我只记得，一天中情绪的跌宕起伏和思绪的统筹规划，都围绕着两个圆周运动而发生。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;同时，核桃和人一样，都在不断的变化。所以我们玩的是留住时间。这对木头经过一遍遍的揉搓，时间的洗礼，渐渐的留下岁月的记号。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;如同酒越陈越香，核桃经过三冬两夏，慢慢从白茬褪去它的返碱，上色，挂瓷，包浆。最后这个老物件成为时间的见证者，也称得上是个艺术品。美不胜收。&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/hetao/4124222bfda2f115dbffaa65d7dcc4a4.jpeg&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/img/wc-search.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
</description>
      
    </item>
    
    <item>
      <title>后知后觉之尽早布局个人IP</title>
      <link>https://vastzh.com/blog/personal_ip/</link>
      <pubDate>Mon, 25 Sep 2023 00:00:00 +0000</pubDate>
      
      <guid>https://vastzh.com/blog/personal_ip/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;正式开始前，先说一下网络暴力，为什么？因为它的杀伤力非常大。如一个恶意的评论，先不论它的真实性。只要在网络曝光，有人认可也有人反对，这取决于每个人的认知，重要的是平台让每个人都有了曝光的可能，不容小视，它拉近了人与人，  微博，小红书，抖音，朋友圈。你在网上的言论可能被任何人看到，只要你想。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;网络平台还存在复利性，一时的言论会不断被人看到，影响是长久的。&lt;br&gt;
这两天遇到的事正好拿来讲讲，每年中秋，我都会拿到雪月饼的票子，兑换时，只是想要一个保温袋，天气热离家远，店员说没有保温袋（边上明明有不少）往年也都给，老婆在大众点评上写了经过。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;到了第二天，那边就联系表示歉意，又送了几个月饼，希望我们删除评论。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/personal_ip/0c0caecbf3350a7baf585eb52ee75954.jpeg&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;br&gt;
 &lt;/p&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/blog/personal_ip/b22633e9e9e75d6d363df738cc4cc6f6.jpeg&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
&lt;p&gt;我认为网络社交平台是一个可以利用起来的工具。进一步说，如果能利用好这个工具，对我们的生活来说会有很多便利，甚至有更多的路和选择。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;尽早的打造个人的IP。其实也是为自己多谋一条道路。可以尝试着在闲暇之余发一下自媒体，记录vlog，发布一些小红书笔记，点评上写一些个人体验，直播互动带货。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;最初我们需要依靠外部热点来链接我们，当你的粉丝达到一定的数量后，往往你的一些言论可以影响到很多人，不光言论，自媒体现在成了年轻人选择的热门行业。如果做起来了，比起给别人打工难道不香吗。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;为什么说要趁早，因为做自媒体和打造个人IP不是一朝一夕的事，需要有长期累积的过程，可能长时间得不到正面反馈，慢慢就失去了兴致。人往往是反馈越多你的野心就越多。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;我是一个后知后觉的人，在今年五月份才想到尝试自媒体，经过3个月抖音积累了8000多个粉丝，小红书的粉丝也有2w多个了。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;这个战果不牛逼，牛逼的人大有人在，不过，算得上起号成功，毕竟如果通过自媒体捞钱，必须先要达到一定的粉丝数量才可开通的，各个平台都是这样的，你的粉丝越多流量也就越多，平台也会想你倾斜，在我摸索的过程中，也累积了一些经验，如果想了解我的自媒体账号，可以私信我的。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;据我的观察，现在各大平台都在抢占市场，例如，抖音也开始做图文笔记，小红书也做起直播带货短视频，都是殊途同归。不过小红书用户的购买力相比抖音会更强一些。我有一个书单号在粉丝不多的时候，笔记带货的下单量一件非常客观了，比抖音多不少。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;再说复利，一件事只做了一遍，反复的获利，完完全全的字面意思，比如我开发一个APP里面有广告或付费业务，只要持续有人使用，我就会一直拿到收益。就像一个自动赚钱的机器那般。短视频和带货笔记也是同样的道理。当把一件事做起来，可以有更多的时间去做别的事。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;闲的时候，建议看到这里的人，可以把个人IP做起来，现在流量为王的时代，只要你有流量，平台资源就会向你倾斜，你的货自然也就卖的快。只要有流量也不怕被公司裁员了。虽然都是废话，但是很多人也只停留在观望不是吗。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;p&gt;当人在排斥一件事的时候，总是可以找到理由的，这很正常。也就很难走出自己的认知。探索自己未知的领悟还是挺有趣的，不妨试试。&lt;br&gt;
&lt;br&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;p&gt;




  
  
    
  
  
    &lt;figure&gt;
      
      &lt;img
        class=&#34;my-0 rounded-md&#34;
        src=&#34;https://vastzh.com/img/wc-search.png&#34;
        alt=&#34;&#34;
      /&gt;
      
      
    &lt;/figure&gt;
  

&lt;/p&gt;
</description>
      
    </item>
    
  </channel>
</rss>
